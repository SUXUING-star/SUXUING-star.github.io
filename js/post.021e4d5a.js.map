{"version":3,"file":"js/post.021e4d5a.js","mappings":"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","sources":["webpack://vue-blog/./src/views/PostDetail.vue","webpack://vue-blog/./src/views/PostDetail.vue?b0ff"],"sourcesContent":["<!-- PostDetail.vue -->\n<template>\n  <div class=\"detail-post\" v-if=\"post\">\n    <div class=\"detail-header\">\n      <h1>{{ post.title }}</h1>\n      <div class=\"detail-meta\">\n        <time :datetime=\"post.date\">{{ post.date }}</time>\n        <span class=\"detail-reading-time\" v-if=\"post.readingTime\">{{ post.readingTime }} 分钟阅读</span>\n      </div>\n    </div>\n    \n    <div class=\"detail-container\">\n      <div class=\"detail-toc\" v-if=\"tableOfContents\">\n        <div class=\"detail-toc-title\">目录</div>\n        <div class=\"detail-toc-content\" v-html=\"tableOfContents\"></div>\n      </div>\n      \n        <!-- 修改代码块的渲染部分 -->\n      <div class=\"detail-content markdown-body\" v-html=\"renderedContent\" ref=\"contentRef\">\n      </div>\n    </div>\n  </div>\n</template>\n  \n  <script>\n  import { computed, onMounted, ref, watch, nextTick } from 'vue'\n  import { useRoute } from 'vue-router'\n  import { useStore } from 'vuex'\n  import { marked } from 'marked'\n  \n  // 正确的 Prism.js 导入顺序\n  import Prism from 'prismjs'\n  import 'prismjs/themes/prism-tomorrow.css'\n  // 在核心加载后再加载语言\n  import 'prismjs/components/prism-markup'\n  import 'prismjs/components/prism-css'\n  import 'prismjs/components/prism-javascript'\n  import 'prismjs/components/prism-typescript'\n  import 'prismjs/components/prism-python'\n  import 'prismjs/components/prism-bash'\n  import 'prismjs/components/prism-json'\n  // 可选的插件\n  import 'prismjs/plugins/line-numbers/prism-line-numbers'\n  import 'prismjs/plugins/line-numbers/prism-line-numbers.css'\n  \n  export default {\n    name: 'PostDetailPage',\n    setup() {\n      const route = useRoute()\n      const store = useStore()\n      const contentRef = ref(null)\n  \n      const loadMathJax = () => {\n        return new Promise((resolve) => {\n          window.MathJax = {\n            tex: {\n              inlineMath: [['$', '$']],\n              displayMath: [['$$', '$$']]\n            },\n            svg: {\n              fontCache: 'global'\n            },\n            startup: {\n              pageReady: () => {\n                resolve()\n              }\n            }\n          }\n  \n          const script = document.createElement('script')\n          script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n          document.head.appendChild(script)\n        })\n      }\n      const getImageUrl = (imagePath) => {\n        if (!imagePath) return ''\n        // 如果路径是以 http 开头的，直接返回\n        if (imagePath.startsWith('http')) {\n          return imagePath\n        }\n        // 否则使用 public 中的路径\n        return `/posts/images/${imagePath}`\n      }\n      const configureMarked = () => {\n        const renderer = new marked.Renderer()\n\n        renderer.code = (code, language = 'plaintext') => {\n          let highlightedCode = code\n          try {\n            if (Prism.languages[language]) {\n              highlightedCode = Prism.highlight(\n                code,\n                Prism.languages[language],\n                language\n              )\n            }\n\n            if (language === 'math') {\n              return `<div class=\"math-block\">$$${code}$$</div>`\n            }\n\n            // 更新后的代码块模板，添加折叠功能\n            return `\n              <div class=\"code-block-wrapper\">\n                <div class=\"code-block-header\">\n                  <span class=\"code-block-language\">${language}</span>\n                  <div class=\"code-block-actions\">\n                    <button type=\"button\" class=\"code-collapse-btn\" title=\"折叠/展开\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"collapse-icon\">\n                        <polyline points=\"6 9 12 15 18 9\"></polyline>\n                      </svg>\n                    </button>\n                    <button type=\"button\" class=\"code-copy-btn\" title=\"复制代码\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"copy-icon\">\n                        <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n                        <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n                      </svg>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"check-icon hidden\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n                <div class=\"code-block-content\">\n                  <pre class=\"line-numbers\"><code class=\"language-${language}\">${highlightedCode}</code></pre>\n                </div>\n              </div>\n            `;\n          } catch (err) {\n            console.error('Code highlighting error:', err)\n            return `<pre><code>${code}</code></pre>`\n          }\n        }\n\n        // 修改图片渲染逻辑\n        renderer.image = (href, title, text) => {\n          const imageUrl = getImageUrl(href)\n          return `\n            <div class=\"image-container\">\n              <img src=\"${imageUrl}\" alt=\"${text}\" title=\"${title || ''}\" loading=\"lazy\" />\n              ${text ? `<div class=\"image-caption\">${text}</div>` : ''}\n            </div>\n          `\n        }\n  \n        marked.setOptions({\n          renderer,\n          gfm: true,\n          breaks: true,\n          pedantic: false,\n          smartLists: true,\n          smartypants: false\n        })\n      }\n  \n      const renderMathJax = () => {\n        if (window.MathJax) {\n          window.MathJax.typeset()\n        }\n      }\n  \n      const highlightCode = () => {\n        if (contentRef.value) {\n          const codeBlocks = contentRef.value.querySelectorAll('pre code')\n          codeBlocks.forEach((block) => {\n            Prism.highlightElement(block)\n          })\n        }\n      }\n\n      const initializeCodeActions = () => {\n      // 处理代码复制\n      const handleCodeCopy = async (event) => {\n        const button = event.target.closest('.code-copy-btn')\n        if (!button) return\n\n        try {\n          // 检查剪贴板 API 支持性\n          if (!navigator.clipboard) {\n            alert('Clipboard API is not supported in this browser.')\n            return\n          }\n\n          const code = decodeURIComponent(button.dataset.code || '')\n          if (!code) {\n            alert('No code found to copy.')\n            return\n          }\n\n          await navigator.clipboard.writeText(code)\n\n          // 获取按钮内的图标\n          const copyIcon = button.querySelector('.copy-icon')\n          const checkIcon = button.querySelector('.check-icon')\n          if (copyIcon && checkIcon) {\n            copyIcon.classList.add('hidden')\n            checkIcon.classList.remove('hidden')\n\n            setTimeout(() => {\n              copyIcon.classList.remove('hidden')\n              checkIcon.classList.add('hidden')\n            }, 2000)\n          }\n        } catch (err) {\n          alert('Failed to copy code. Please try again.')\n          console.error('Failed to copy code:', err)\n        }\n      }\n\n  // 绑定事件\n  const copyButtons = document.querySelectorAll('.code-copy-btn')\n  copyButtons.forEach((button) => {\n    button.addEventListener('click', handleCodeCopy)\n  })\n}\n\n\n      onMounted(async () => {\n        configureMarked()\n        await loadMathJax()\n        renderMathJax()\n        nextTick(() => {\n          initializeCodeActions();\n        });\n      })\n\n      const post = computed(() => \n        store.state.posts.find(p => p.id === parseInt(route.params.id))\n      )\n      const processMarkdownContent = (content) => {\n        if (!content) return ''\n        // 处理 Markdown 内容中的图片路径\n        return content.replace(\n          /!\\[(.*?)\\]\\((.*?)\\)/g,\n          (match, alt, path) => {\n            if (path.startsWith('http')) {\n              return match\n            }\n            const imageUrl = getImageUrl(path)\n            return `![${alt}](${imageUrl})`\n          }\n        )\n      }\n      const renderedContent = computed(() => {\n        if (!post.value?.content) return ''\n        try {\n          // 先处理内容中的图片路径，再进行 Markdown 渲染\n          const processedContent = processMarkdownContent(post.value.content)\n          return marked.parse(processedContent)\n        } catch (err) {\n          console.error('Markdown rendering error:', err)\n          return '<p>Error rendering content</p>'\n        }\n      })\n    \n      watch(renderedContent, () => {\n        nextTick(() => {\n          highlightCode()\n          renderMathJax()\n          initializeCodeActions(); // 确保内容更新后重新绑定事件\n        })\n      })\n      \n      return {\n        post,\n        renderedContent,\n        contentRef\n      }\n    }\n  }\n  </script>\n  \n  <style>\n.detail-post {\n  max-width: 1000px;  /* 从 1200px 减小到 1000px */\n  margin: 0 auto;\n  padding: 1rem;\n}\n\n.detail-header {\n  text-align: center;\n  max-width: 700px;  /* 调整为与容器同宽 */\n  margin: 0 auto 2rem;\n  padding: 2rem 1rem;\n  background: linear-gradient(135deg, rgba(248, 250, 252, 0.95) 0%, rgba(238, 242, 247, 0.95) 100%);\n  border-radius: 16px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  position: relative;\n  overflow: hidden;\n}\n/* 添加背景装饰 */\n.detail-header::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 4px;\n  background: linear-gradient(90deg, #42b883, #3aa876);\n}\n.detail-header h1 {\n  font-size: 1.75rem;\n  color: #2c3e50;\n  margin-bottom: 0.75rem;\n  line-height: 1.3;\n  font-weight: 600;\n}\n\n.detail-meta {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n  color: #64748b;\n  font-size: 0.9375rem;\n  position: relative;\n}\n\n.detail-meta::before,\n.detail-meta::after {\n  content: '';\n  height: 1px;\n  width: 50px;\n  background: #e2e8f0;\n  margin: 0 1rem;\n}\n\n\n.detail-reading-time {\n  display: flex;\n  margin: 0 auto;\n  gap: 0.5rem;\n  padding: 0.25rem 0.75rem;\n  background: rgba(66, 184, 131, 0.1);\n  border-radius: 20px;\n  color: #42b883;\n  font-weight: 500;\n}\n\n\n.detail-container {\n  max-width: 800px;  /* 添加最大宽度限制 */\n  margin: 0 auto;\n  position: relative;\n}\n.detail-toc {\n  position: sticky;\n  top: 5rem;\n  height: fit-content;\n  background: #ffffff;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  border: 1px solid #eef2f7;\n}\n\n.detail-toc-title {\n  font-size: 1rem;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #42b883;\n}\n\n.detail-toc-content {\n  font-size: 0.875rem;\n  line-height: 1.6;\n}\n\n.detail-toc-content a {\n  color: #4a5568;\n  text-decoration: none;\n  display: block;\n  padding: 0.25rem 0;\n  transition: color 0.2s ease;\n}\n\n.detail-toc-content a:hover {\n  color: #42b883;\n}\n\n.detail-content {\n  background: #ffffff !important;\n  padding: 2.5rem;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border: 1px solid #eef2f7;\n  max-width: 100%;  /* 确保内容不会溢出容器 */\n}\n\n/* 文章内容样式优化 */\n.detail-content h1,\n.detail-content h2,\n.detail-content h3,\n.detail-content h4 {\n  margin-top: 2rem;\n  margin-bottom: 1rem;\n  color: #2c3e50;\n  font-weight: 600;\n  line-height: 1.4;\n}\n\n.detail-content h1 {\n  font-size: 1.875rem;\n  border-bottom: 2px solid #eef2f7;\n  padding-bottom: 0.5rem;\n}\n\n.detail-content h2 {\n  font-size: 1.5rem;\n}\n\n.detail-content h3 {\n  font-size: 1.25rem;\n}\n\n.detail-content p {\n  margin: 1.25rem 0;\n  line-height: 1.8;\n  color: #4a5568;\n}\n\n.detail-content a {\n  color: #42b883;\n  text-decoration: none;\n  border-bottom: 1px solid transparent;\n  transition: border-color 0.2s ease;\n}\n\n.detail-content a:hover {\n  border-bottom-color: #42b883;\n}\n\n.detail-content blockquote {\n  margin: 1.5rem 0;\n  padding: 1rem 1.5rem;\n  border-left: 4px solid #42b883;\n  background: #f8fafc;\n  border-radius: 4px;\n  color: #4a5568;\n  font-style: italic;\n}\n\n.detail-content pre {\n  margin: 1.5rem 0;\n  padding: 1.25rem;\n  border-radius: 8px;\n  background: #2d3748 !important;\n  overflow-x: auto;\n}\n\n/* 调整图片最大宽度 */\n.detail-content img {\n  max-width: 80%; \n  height: auto;\n  display: block;\n  margin: 2rem auto;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.code-block-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background: #2d2d2d;\n  border-bottom: 1px solid #404040;\n}\n\n.code-block-language {\n  color: #e2e8f0;\n  font-size: 0.875rem;\n  font-family: 'Fira Code', monospace;\n}\n\n.code-block-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.code-collapse-btn,\n.code-copy-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.25rem;\n  background: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.code-collapse-btn:hover,\n.code-copy-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.code-block-content {\n  transition: max-height 0.3s ease-in-out;\n  max-height: 1000px; /* 调整此值以适应较长的代码块 */\n  overflow: hidden;\n}\n\n.code-block-content.collapsed {\n  max-height: 0;\n}\n\n.collapse-icon {\n  transition: transform 0.3s ease;\n}\n\n.code-block-wrapper {\n  margin: 1.5rem 0;\n  border-radius: 8px;\n  overflow: hidden;\n  background: #1a1a1a;\n}\n\n/* 修改原有的复制按钮样式 */\n.code-copy-btn {\n  position: static; /* 取消绝对定位 */\n  opacity: 1; /* 始终显示 */\n}\n\n/* 移除原有的悬停显示复制按钮的效果 */\n.code-block-wrapper:hover .code-copy-btn {\n  opacity: 1;\n}\n\n/* 代码样式优化 */\n.detail-content pre code {\n  font-family: 'Fira Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  font-size: 0.9em;\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\n/* 内联代码样式 */\n.detail-content :not(pre) > code {\n  background: rgba(66, 184, 131, 0.1) !important;\n  color: #42b883 !important;\n  padding: 0.2em 0.4em !important;\n  border-radius: 4px !important;\n  font-size: 0.875em !important;\n  font-family: 'Fira Code', monospace !important;\n}\n\n/* Prism.js 主题覆盖 */\n:not(pre) > code[class*=\"language-\"],\npre[class*=\"language-\"] {\n  background: #1a1a1a !important;\n}\n\n.line-numbers .line-numbers-rows {\n  border-right: 1px solid #404040 !important;\n  padding-right: 0.5rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 1024px) {\n  .detail-container {\n    grid-template-columns: 1fr;\n    max-width: 900px;\n  }\n\n  .detail-toc {\n    display: none;\n  }\n}\n\n/* 优化移动端显示 */\n@media (max-width: 768px) {\n  .detail-post {\n    padding: 0.5rem;\n  }\n  \n  .detail-content {\n    padding: 1.5rem;\n  }\n}\n/* 代码高亮样式微调 */\n.detail-content :not(pre) > code {\n  background: #f1f5f9;\n  color: #ef4444;\n  padding: 0.2em 0.4em;\n  border-radius: 4px;\n  font-size: 0.875em;\n  font-family: 'Fira Code', monospace;\n}\n\n/* 数学公式块样式 */\n.detail-content .math-block {\n  margin: 1.5rem 0;\n  padding: 1rem;\n  background: #f8fafc;\n  border-radius: 8px;\n  overflow-x: auto;\n}\n.code-block-wrapper {\n  position: relative;\n  margin: 1.5rem 0;\n  border-radius: 8px;\n  overflow: hidden;\n  background: #1a1a1a;\n}\n\n.code-block-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.75rem 1rem;\n  background: #2d2d2d;\n  border-bottom: 1px solid #404040;\n}\n\n.code-block-language {\n  color: #e2e8f0;\n  font-size: 0.875rem;\n  font-family: monospace;\n  text-transform: uppercase;\n}\n\n.code-block-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.code-collapse-btn,\n.code-copy-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  padding: 0;\n  background: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.code-collapse-btn:hover,\n.code-copy-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.code-block-content {\n  transition: max-height 0.3s ease-in-out;\n  max-height: 1000px;\n  overflow: hidden;\n}\n\n.code-block-content.collapsed {\n  display: none; /* 折叠时隐藏内容 */\n}\n\n.collapse-icon {\n  transition: transform 0.3s ease;\n}\n\n.collapse-icon.rotate-180 {\n  transform: rotate(180deg);\n}\n\n.copy-icon,\n.check-icon {\n  width: 16px;\n  height: 16px;\n}\n\n.hidden {\n  display: none;\n}\n</style>","import { render } from \"./PostDetail.vue?vue&type=template&id=606bf55b\"\nimport script from \"./PostDetail.vue?vue&type=script&lang=js\"\nexport * from \"./PostDetail.vue?vue&type=script&lang=js\"\n\nimport \"./PostDetail.vue?vue&type=style&index=0&id=606bf55b&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["key","class","$setup","post","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","title","_hoisted_3","datetime","date","_hoisted_4","readingTime","_hoisted_5","_createCommentVNode","_hoisted_6","_ctx","tableOfContents","_hoisted_7","innerHTML","_hoisted_8","renderedContent","ref","_hoisted_9","name","setup","route","useRoute","store","useStore","contentRef","loadMathJax","Promise","resolve","window","MathJax","tex","inlineMath","displayMath","svg","fontCache","startup","pageReady","script","document","createElement","src","head","appendChild","getImageUrl","imagePath","startsWith","configureMarked","renderer","marked","Renderer","code","language","highlightedCode","Prism","err","console","error","image","href","text","imageUrl","setOptions","gfm","breaks","pedantic","smartLists","smartypants","renderMathJax","typeset","highlightCode","value","codeBlocks","querySelectorAll","forEach","block","initializeCodeActions","handleCodeCopy","async","button","event","target","closest","navigator","clipboard","alert","decodeURIComponent","dataset","writeText","copyIcon","querySelector","checkIcon","classList","add","remove","setTimeout","copyButtons","addEventListener","onMounted","nextTick","computed","state","posts","find","p","id","parseInt","params","processMarkdownContent","content","replace","match","alt","path","processedContent","parse","watch","__exports__","render"],"sourceRoot":""}