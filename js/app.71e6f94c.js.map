{"version":3,"file":"js/app.71e6f94c.js","mappings":"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","sources":["webpack://xingyunchaju/./src/posts/post2.md","webpack://xingyunchaju/./src/posts/post3.md","webpack://xingyunchaju/./src/posts/post4.md","webpack://xingyunchaju/./src/posts/post5.md","webpack://xingyunchaju/./src/posts/post6.md","webpack://xingyunchaju/./src/posts/post7.md","webpack://xingyunchaju/./src/posts/post8.md","webpack://xingyunchaju/./src/posts/post9.md","webpack://xingyunchaju/./src/posts/welcome.md","webpack://xingyunchaju/./src/App.vue","webpack://xingyunchaju/./src/components/BlogHeader.vue","webpack://xingyunchaju/./src/components/BlogHeader.vue?c7b7","webpack://xingyunchaju/./src/components/BlogFooter.vue","webpack://xingyunchaju/./src/components/BlogFooter.vue?a69b","webpack://xingyunchaju/./src/App.vue?7ccd","webpack://xingyunchaju/./src/views/Home.vue","webpack://xingyunchaju/./src/components/BlogPost.vue","webpack://xingyunchaju/./src/components/BlogPost.vue?fb96","webpack://xingyunchaju/./src/views/Home.vue?9051","webpack://xingyunchaju/./src/router/index.js","webpack://xingyunchaju/./src/store/index.js","webpack://xingyunchaju/./src/main.js","webpack://xingyunchaju/./src/posts/images|sync|E:/.(png%7Cjpe","webpack://xingyunchaju/./src/posts/ sync \\.md$","webpack://xingyunchaju/webpack/bootstrap","webpack://xingyunchaju/webpack/runtime/chunk loaded","webpack://xingyunchaju/webpack/runtime/compat get default export","webpack://xingyunchaju/webpack/runtime/define property getters","webpack://xingyunchaju/webpack/runtime/ensure chunk","webpack://xingyunchaju/webpack/runtime/get javascript chunk filename","webpack://xingyunchaju/webpack/runtime/get mini-css chunk filename","webpack://xingyunchaju/webpack/runtime/global","webpack://xingyunchaju/webpack/runtime/hasOwnProperty shorthand","webpack://xingyunchaju/webpack/runtime/load script","webpack://xingyunchaju/webpack/runtime/make namespace object","webpack://xingyunchaju/webpack/runtime/publicPath","webpack://xingyunchaju/webpack/runtime/css loading","webpack://xingyunchaju/webpack/runtime/jsonp chunk loading","webpack://xingyunchaju/webpack/startup"],"sourcesContent":["\nmodule.exports = { \n      attributes: {\"title\":\"亚马逊评论文本简要的分析\",\"date\":\"2024-11-17T00:00:00.000Z\",\"summary\":\"这是数据分析部分的代码的描述和一些注释\",\"coverImage\":\"12-8-2.jpg\",\"pinned\":false},\n    \n      html: \"<p>我做的数据分析主要分为两个部分，其实这个第一个部分是后面补充的。</p>\\n<h1>自己简单爬取数据然后自己分析</h1>\\n<p>这是油猴脚本写的js脚本，直接丢进油猴里边就完事，代码编写耗时可能20分钟以内</p>\\n<pre><code class=\\\"language-javascript\\\">// ==UserScript==\\n// @name         amazon-scraper1\\n// @namespace    http://tampermonkey.net/\\n// @version      2024-11-06\\n// @description  try to take over the world!\\n// @author       suxing\\n// @match        https://www.amazon.com/*\\n// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=amazon.com\\n// @grant        none\\n// ==/UserScript==\\n\\n\\n\\nfunction main(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;amazonbutton&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },2000)\\n    }).then(()=&gt;{\\n        let pageMain = document.querySelector(&quot;.sg-col-inner&quot;);\\n        console.log(pageMain)\\n        if(pageMain){\\n            let button = document.createElement(&quot;button&quot;);\\n            button.className=&quot;button-test&quot;\\n            button.innerHTML = &quot;点击爬取json&quot;;\\n            button.style.padding = &quot;10px 20px&quot;;\\n            button.style.fontSize = &quot;16px&quot;;\\n            button.style.backgroundColor = &quot;#4CAF50&quot;;\\n            button.style.color = &quot;white&quot;;\\n            button.style.border = &quot;none&quot;;\\n            button.style.borderRadius = &quot;5px&quot;;\\n            button.style.cursor = &quot;pointer&quot;;\\n            button.style.boxShadow = &quot;0px 4px 6px rgba(0, 0, 0, 0.1)&quot;;\\n            button.style.transition = &quot;background-color 0.3s&quot;;\\n            button.onmouseover = function() {\\n                button.style.backgroundColor = &quot;#45a049&quot;;\\n            };\\n            button.onmouseout = function() {\\n                button.style.backgroundColor = &quot;#4CAF50&quot;;\\n            };\\n            button.onclick=()=&gt;{scrapefunc();}\\n            var buttonContainer = document.createElement(&quot;div&quot;);\\n            buttonContainer.style.display = &quot;flex&quot;;\\n            buttonContainer.style.justifyContent = &quot;center&quot;;\\n            buttonContainer.style.alignItems = &quot;center&quot;;\\n            buttonContainer.style.height = &quot;100px&quot;; // 调整高度以便更好地居中\\n            buttonContainer.appendChild(button);\\n\\n            // 在 pageMain 元素的上方插入按钮\\n            pageMain.parentNode.insertBefore(buttonContainer, pageMain);\\n        }\\n    })\\n}\\n\\nfunction exportjson(data){\\n    const blob = new Blob([data], { type: 'application/json' });\\n    const url = URL.createObjectURL(blob);\\n    const a = document.createElement('a');\\n    a.href = url;\\n    const today = new Date();\\n    const year = today.getFullYear();\\n    const month = String(today.getMonth() + 1).padStart(2, '0');\\n    const day = String(today.getDate()).padStart(2, '0');\\n    const formattedDate = `${year}-${month}-${day}`;\\n    a.download = `amazon-Products${formattedDate}.json`;\\n    document.body.appendChild(a);\\n    a.click();\\n    document.body.removeChild(a);\\n    URL.revokeObjectURL(url);\\n}\\nfunction scrapefunc(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;amazon-scraper test1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },700)\\n    }).then(()=&gt;{\\n        new Promise((resolve)=&gt;{\\n            window.scrollTo({\\n                top: 1000,\\n                behavior: &quot;smooth&quot;\\n            });\\n            setTimeout(()=&gt;{\\n                resolve();\\n            },1000)\\n        }).then(()=&gt;{\\n            new Promise((resolve)=&gt;{\\n                window.scrollTo({\\n                    top: 4000,\\n                    behavior: &quot;smooth&quot;\\n                });\\n                setTimeout(()=&gt;{\\n                    resolve();\\n                },1000)\\n            }).then(()=&gt;{\\n                new Promise((resolve)=&gt;{\\n                    window.scrollTo({\\n                        top: 8000,\\n                        behavior: &quot;smooth&quot;\\n                    });\\n                    setTimeout(()=&gt;{\\n                        resolve();\\n                    },1000)\\n                }).then(()=&gt;{\\n                    new Promise((resolve)=&gt;{\\n                        window.scrollTo({\\n                            top: document.body.scrollHeight,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                        setTimeout(()=&gt;{\\n                            resolve();\\n                        },700)\\n                    }).then(()=&gt;{\\n                        let productlist = [];\\n                        document.querySelectorAll('div.a-section.a-spacing-small.puis-padding-left-small.puis-padding-right-small').forEach(container =&gt; {\\n                            let product = {};\\n\\n                            // 标题和URL: 从商品标题容器获取\\n                            try {\\n                                const titleContainer = container.querySelector('[data-cy=&quot;title-recipe&quot;]');\\n                                product.title = titleContainer.querySelector('.a-size-base-plus.a-color-base').textContent.trim();\\n                                product.url = titleContainer.querySelector('a.a-link-normal').getAttribute('href');\\n                            } catch (e) {\\n                                product.title = '';\\n                                product.url = '';\\n                            }\\n\\n                            // 价格: 从价格容器获取\\n                            try {\\n                                const priceContainer = container.querySelector('[data-cy=&quot;price-recipe&quot;]');\\n                                const priceElement = priceContainer.querySelector('.a-price .a-offscreen');\\n                                product.price = priceElement ? priceElement.textContent.trim() : '';\\n                            } catch (e) {\\n                                product.price = '';\\n                            }\\n\\n                            // 评分和评分数: 从评论容器获取\\n                            try {\\n                                const reviewsContainer = container.querySelector('[data-cy=&quot;reviews-block&quot;]');\\n                                const ratingElement = reviewsContainer.querySelector('.a-icon-alt');\\n                                product.rating = ratingElement ? ratingElement.textContent.trim() : '';\\n\\n                                const reviewsElement = reviewsContainer.querySelector('.rush-component .s-underline-text');\\n                                product.ratingnum = reviewsElement ? reviewsElement.textContent.trim() : '';\\n                            } catch (e) {\\n                                product.rating = '';\\n                                product.ratingnum = '';\\n                            }\\n\\n                            if (product.title) {  // 只添加有标题的商品\\n                                productlist.push(product);\\n                            }\\n                        });\\n                        const productListJson = JSON.stringify(productlist, null, 2);\\n                        console.log(productListJson);\\n                        exportjson(productListJson);\\n                        const nexturl=document.querySelector(&quot;.s-pagination-next&quot;).getAttribute(&quot;href&quot;)\\n                        window.scrollTo({\\n                            top: 0,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                        new Promise((resolve)=&gt;{\\n                            setTimeout(()=&gt;{\\n                                resolve();\\n                            },500)\\n                        }).then(()=&gt;{\\n                            location.href=nexturl\\n                        })\\n\\n                    })\\n                })\\n            })\\n        })\\n    })\\n}\\n\\n\\n\\n\\n\\nwindow.addEventListener(&quot;load&quot;,()=&gt;{\\n    main();\\n\\n},false)\\n</code></pre>\\n<h2>python分析代码</h2>\\n<pre><code class=\\\"language-python\\\"></code></pre>\\n<h1>深度学习模型构建部分</h1>\\n<h2>简要数据分析</h2>\\n<pre><code class=\\\"language-python\\\"># 导入所需库\\nfrom datasets import load_dataset\\nfrom wordcloud import WordCloud\\nimport matplotlib.pyplot as plt\\nimport pandas as pd\\nimport seaborn as sns\\nfrom sklearn.model_selection import train_test_split\\nimport torch\\nfrom torch import nn\\nfrom torch.utils.data import DataLoader, Dataset\\nfrom transformers import BertTokenizer\\n\\n# 加载数据集，并取前2000条数据\\ndataset = load_dataset(&quot;McAuley-Lab/Amazon-Reviews-2023&quot;, &quot;raw_review_All_Beauty&quot;, trust_remote_code=True)\\ndata = pd.DataFrame(dataset[&quot;full&quot;][:10000])  # 仅取2000条数据\\nprint(data.head())\\n\\n# 1. 词云生成\\nall_text = &quot; &quot;.join(data[&quot;text&quot;].fillna(&quot;&quot;))\\nwordcloud = WordCloud(width=800, height=400, background_color=&quot;white&quot;).generate(all_text)\\n\\nplt.figure(figsize=(10, 5))\\nplt.imshow(wordcloud, interpolation=&quot;bilinear&quot;)\\nplt.axis(&quot;off&quot;)\\nplt.title(&quot;Word Cloud of Amazon Reviews&quot;)\\nplt.show()\\n\\n# 2. 用户画像分析\\n# 评分分布\\nplt.figure(figsize=(8, 5))\\nsns.histplot(data[&quot;rating&quot;], bins=5, kde=True)\\nplt.xlabel(&quot;Rating&quot;)\\nplt.title(&quot;Distribution of Ratings&quot;)\\nplt.show()\\n\\n# 验证购买分析\\nverified_purchase_counts = data[&quot;verified_purchase&quot;].value_counts()\\nplt.figure(figsize=(8, 5))\\nsns.barplot(x=verified_purchase_counts.index, y=verified_purchase_counts.values)\\nplt.xlabel(&quot;Verified Purchase&quot;)\\nplt.ylabel(&quot;Count&quot;)\\nplt.title(&quot;Distribution of Verified Purchases&quot;)\\nplt.show()\\n\\n# 3. 时间序列分析：评论随时间的变化\\ndata[&quot;timestamp&quot;] = pd.to_datetime(data[&quot;timestamp&quot;], unit=&quot;ms&quot;)  # 转换时间戳为日期格式\\ndata.set_index(&quot;timestamp&quot;, inplace=True)\\ndata[&quot;rating&quot;].resample(&quot;M&quot;).mean().plot(figsize=(12, 6))\\nplt.title(&quot;Average Rating Over Time (Monthly)&quot;)\\nplt.xlabel(&quot;Time&quot;)\\nplt.xlim(pd.Timestamp(&quot;2012-01-01&quot;), pd.Timestamp(&quot;2023-12-31&quot;))\\nplt.ylabel(&quot;Average Rating&quot;)\\nplt.show()\\n\\n# 4. 评论字数分析\\ndata[&quot;review_length&quot;] = data[&quot;text&quot;].apply(lambda x: len(str(x).split()))  # 计算每条评论的词数\\ndata[&quot;review_length&quot;].resample(&quot;M&quot;).mean().plot(figsize=(12, 6))\\nplt.title(&quot;Average Review Length Over Time (Monthly)&quot;)\\nplt.xlabel(&quot;Time&quot;)\\nplt.xlim(pd.Timestamp(&quot;2012-01-01&quot;), pd.Timestamp(&quot;2023-12-31&quot;))\\nplt.ylabel(&quot;Average Review Length&quot;)\\nplt.show()\\n\\n\\n\\n\\n\\n</code></pre>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"（考研待开坑）YOLO计算机视觉&目标检测模型\",\"date\":\"2024-11-01T00:00:00.000Z\",\"summary\":\"在尝试的学习CV技术\",\"coverImage\":\"12-8-2.jpg\",\"pinned\":false},\n    \n      html: \"<h1>学点CV</h1>\\n<p>（CV太烧内存了，6G不够用。。。所以还没开始跑代码）</p>\\n<p>你以为的YOLO ：<strong>you only look once</strong></p>\\n<p>我以为的YOLO： <strong>YOU ONLY LIVE ONCE</strong></p>\\n<p><strong>珍爱生命，远离深度学习啊！！</strong></p>\\n<h1>常见的视觉任务</h1>\\n<ol>\\n<li>最简单的任务：图片分类</li>\\n<li>进阶：语义分割</li>\\n<li>再进阶：目标检测（锚框选定）</li>\\n<li>更加高端：3维预测（如路面检测无人车自动驾驶）</li>\\n<li>运动监测（肢体检测，嘴型）</li>\\n</ol>\\n<h1>研究一下YOLO的模型结构</h1>\\n<p>以YOLOv3为例</p>\\n<ol>\\n<li>\\n<p>输入:  模型的输入是一张图片。</p>\\n</li>\\n<li>\\n<p>骨干网络 (Backbone Network):  用于提取图像特征。YOLOv3 使用 Darknet-53 作为骨干网络，它是一个 53 层的卷积神经网络，具有残差连接，可以有效地提取图像特征。</p>\\n</li>\\n<li>\\n<p>特征金字塔网络 (Feature Pyramid Network, FPN):  用于在不同尺度上检测目标。FPN 将骨干网络提取的不同层级的特征图进行融合，生成多个尺度的特征图，从而可以检测不同大小的目标。</p>\\n</li>\\n<li>\\n<p>检测头 (Detection Head):  用于预测目标的类别和位置。YOLOv3 的检测头包含三个分支，分别对应三个不同的尺度。每个分支都包含一系列卷积层，最终输出一个三维张量，其中包含每个网格单元的预测信息。</p>\\n</li>\\n</ol>\\n<p>将输入图像分成 S x S 个网格单元。\\n每个网格单元负责预测 B 个边界框和 C 个类别概率。\\n每个边界框包含 5 个预测值：x，y，w，h 和置信度。\\n(x, y) 是边界框中心相对于网格单元的坐标。\\n(w, h) 是边界框的宽度和高度相对于整张图片的比例。\\n置信度表示边界框包含目标的概率以及边界框的准确度。\\n每个网格单元还会预测 C 个类别概率，表示该网格单元包含某个类别的目标的概率。</p>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"用亚马逊评论数据，玩一下生成式模型\",\"date\":\"2024-11-01T00:00:00.000Z\",\"summary\":\"学习一下生成式模型\",\"coverImage\":\"12-8-2.jpg\",\"pinned\":false},\n    \n      html: \"<h1>T5预训练模型上做微调</h1>\\n<pre><code class=\\\"language-python\\\"># 导入所需库\\nfrom datasets import load_dataset\\nimport numpy as np\\nfrom sklearn.model_selection import train_test_split\\nimport torch\\nimport torch.nn as nn\\nfrom transformers import (\\n    T5ForConditionalGeneration, T5Tokenizer,\\n    get_linear_schedule_with_warmup\\n)\\nimport gc\\nfrom torch.utils.data import DataLoader, Dataset\\nimport matplotlib.pyplot as plt\\nfrom tqdm import tqdm\\nimport pandas as pd\\nimport copy\\nimport os\\nimport random\\nfrom torch.nn.utils.rnn import pad_sequence\\nimport nltk\\nfrom nltk.tokenize import word_tokenize\\nfrom collections import Counter\\nimport re\\n\\n# 下载必要的NLTK数据\\nnltk.download('punkt')\\nnltk.download('wordnet')\\nfrom nltk.corpus import wordnet\\n\\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\\n\\ndef set_seed(seed=42):\\n    random.seed(seed)\\n    np.random.seed(seed)\\n    torch.manual_seed(seed)\\n    if torch.cuda.is_available():\\n        torch.cuda.manual_seed_all(seed)\\n\\nset_seed()\\n# 数据增强方法\\nclass TextAugmenter:\\n    @staticmethod\\n    def synonym_replacement(text, n=1):\\n        words = word_tokenize(text)\\n        new_words = words.copy()\\n        random_word_list = list(set([word for word in words if word.isalnum()]))\\n        n = min(n, len(random_word_list))\\n        \\n        for _ in range(n):\\n            random_word = random.choice(random_word_list)\\n            synonyms = []\\n            for syn in wordnet.synsets(random_word):\\n                for lemma in syn.lemmas():\\n                    synonyms.append(lemma.name())\\n            if len(synonyms) &gt; 0:\\n                synonym = random.choice(list(set(synonyms)))\\n                random_idx = random.randint(0, len(words) - 1)\\n                new_words[random_idx] = synonym\\n        \\n        return ' '.join(new_words)\\n\\n    @staticmethod\\n    def random_deletion(text, p=0.1):\\n        words = word_tokenize(text)\\n        if len(words) == 1:\\n            return text\\n        \\n        new_words = []\\n        for word in words:\\n            if random.random() &gt; p:\\n                new_words.append(word)\\n        \\n        if len(new_words) == 0:\\n            rand_int = random.randint(0, len(words)-1)\\n            new_words.append(words[rand_int])\\n            \\n        return ' '.join(new_words)\\n\\n    @staticmethod\\n    def random_swap(text, n=1):\\n        words = word_tokenize(text)\\n        new_words = words.copy()\\n        for _ in range(n):\\n            if len(new_words) &gt;= 2:\\n                idx1, idx2 = random.sample(range(len(new_words)), 2)\\n                new_words[idx1], new_words[idx2] = new_words[idx2], new_words[idx1]\\n        return ' '.join(new_words)\\n\\nclass ReviewGenerationDataset(Dataset):\\n    def __init__(self, texts, ratings, tokenizer, max_len=128, augment=False):\\n        # 将Series转换为list以避免索引问题\\n        self.texts = texts.tolist()\\n        self.ratings = ratings.tolist()\\n        self.tokenizer = tokenizer\\n        self.max_len = max_len\\n        self.augment = augment\\n        self.augmenter = TextAugmenter()\\n\\n    def __len__(self):\\n        return len(self.texts)\\n\\n    def augment_text(self, text):\\n        augmentation_ops = [\\n            (self.augmenter.synonym_replacement, {'n': 1}),\\n            (self.augmenter.random_deletion, {'p': 0.1}),\\n            (self.augmenter.random_swap, {'n': 1})\\n        ]\\n        op, params = random.choice(augmentation_ops)\\n        return op(text, **params)\\n\\n    def __getitem__(self, idx):\\n        text = str(self.texts[idx])\\n        rating = self.ratings[idx]\\n        \\n        if self.augment and random.random() &lt; 0.3:\\n            text = self.augment_text(text)\\n        \\n        prompt = f&quot;Generate a {rating}-star review:&quot;\\n        \\n        prompt_encoding = self.tokenizer(\\n            prompt,\\n            max_length=32,\\n            padding='max_length',\\n            truncation=True,\\n            return_tensors='pt'\\n        )\\n        \\n        target_encoding = self.tokenizer(\\n            text,\\n            max_length=self.max_len,\\n            padding='max_length',\\n            truncation=True,\\n            return_tensors='pt'\\n        )\\n\\n        return {\\n            'input_ids': prompt_encoding['input_ids'].squeeze(),\\n            'attention_mask': prompt_encoding['attention_mask'].squeeze(),\\n            'labels': target_encoding['input_ids'].squeeze(),\\n            'decoder_attention_mask': target_encoding['attention_mask'].squeeze()\\n        }\\n\\n\\nclass ReviewGenerator(nn.Module):\\n    def __init__(self, model_name=&quot;t5-base&quot;):\\n        super().__init__()\\n        self.model = T5ForConditionalGeneration.from_pretrained(model_name)\\n        # 启用梯度检查点以减少内存使用\\n        self.model.gradient_checkpointing_enable()\\n        \\n    def forward(self, input_ids, attention_mask, labels=None, decoder_attention_mask=None):\\n        outputs = self.model(\\n            input_ids=input_ids,\\n            attention_mask=attention_mask,\\n            labels=labels,\\n            decoder_attention_mask=decoder_attention_mask\\n        )\\n        return outputs\\n\\n\\ndef prepare_data(batch_size=8):  # 减小batch size以降低内存使用\\n    # 加载数据集\\n    dataset = load_dataset(&quot;McAuley-Lab/Amazon-Reviews-2023&quot;, &quot;raw_review_All_Beauty&quot;, trust_remote_code=True)\\n    data = pd.DataFrame(dataset[&quot;full&quot;][:200000])\\n    \\n    # 数据清洗\\n    data['text'] = data['text'].fillna(&quot;&quot;).astype(str)\\n    data = data[data['text'].str.len() &gt; 10]\\n    data = data.reset_index(drop=True)\\n    \\n    # 划分训练集和验证集\\n    train_texts, val_texts, train_ratings, val_ratings = train_test_split(\\n        data['text'], data['rating'],\\n        test_size=0.1,\\n        random_state=42\\n    )\\n    \\n    tokenizer = T5Tokenizer.from_pretrained('t5-base', model_max_length=512)  # 减小max_length\\n    \\n    train_dataset = ReviewGenerationDataset(train_texts, train_ratings, tokenizer, augment=True)\\n    val_dataset = ReviewGenerationDataset(val_texts, val_ratings, tokenizer, augment=False)\\n    \\n    train_loader = DataLoader(\\n        train_dataset, \\n        batch_size=batch_size, \\n        shuffle=True,\\n        drop_last=True,\\n        pin_memory=True  # 启用pin_memory加速数据传输\\n    )\\n    val_loader = DataLoader(\\n        val_dataset, \\n        batch_size=batch_size,\\n        drop_last=True,\\n        pin_memory=True\\n    )\\n    \\n    return train_loader, val_loader, tokenizer\\n\\n\\ndef train_generator(model, train_loader, val_loader, epochs=5, save_dir=&quot;generator_checkpoints&quot;, \\n                   gradient_accumulation_steps=4):\\n    # 创建输出目录\\n    os.makedirs(save_dir, exist_ok=True)\\n    os.makedirs(&quot;generative-output&quot;, exist_ok=True)\\n    \\n    optimizer = torch.optim.AdamW(model.parameters(), lr=2e-5)\\n    num_training_steps = (len(train_loader) // gradient_accumulation_steps) * epochs\\n    num_warmup_steps = num_training_steps // 10\\n    scheduler = get_linear_schedule_with_warmup(\\n        optimizer,\\n        num_warmup_steps=num_warmup_steps,\\n        num_training_steps=num_training_steps\\n    )\\n    \\n    best_val_loss = float('inf')\\n    train_losses = []\\n    val_losses = []\\n    \\n    for epoch in range(epochs):\\n        model.train()\\n        total_train_loss = 0\\n        optimizer.zero_grad()\\n        \\n        with tqdm(total=len(train_loader), desc=f&quot;Epoch {epoch+1}/{epochs}&quot;) as pbar:\\n            for batch_idx, batch in enumerate(train_loader):\\n                # 将数据移动到GPU\\n                input_ids = batch['input_ids'].to(device)\\n                attention_mask = batch['attention_mask'].to(device)\\n                labels = batch['labels'].to(device)\\n                decoder_attention_mask = batch['decoder_attention_mask'].to(device)\\n                \\n                outputs = model(\\n                    input_ids=input_ids,\\n                    attention_mask=attention_mask,\\n                    labels=labels,\\n                    decoder_attention_mask=decoder_attention_mask\\n                )\\n                \\n                loss = outputs.loss / gradient_accumulation_steps\\n                total_train_loss += loss.item() * gradient_accumulation_steps\\n                \\n                loss.backward()\\n                \\n                if (batch_idx + 1) % gradient_accumulation_steps == 0:\\n                    torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=1.0)\\n                    optimizer.step()\\n                    scheduler.step()\\n                    optimizer.zero_grad()\\n                    \\n                    # 清理缓存\\n                    if torch.cuda.is_available():\\n                        torch.cuda.empty_cache()\\n                \\n                pbar.update(1)\\n                pbar.set_postfix({\\n                    'train_loss': f'{loss.item() * gradient_accumulation_steps:.4f}'\\n                })\\n        \\n        # 处理最后一个不完整的累积步\\n        if len(train_loader) % gradient_accumulation_steps != 0:\\n            torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=1.0)\\n            optimizer.step()\\n            scheduler.step()\\n            optimizer.zero_grad()\\n        \\n        # 评估阶段\\n        model.eval()\\n        total_val_loss = 0\\n        \\n        with torch.no_grad():\\n            for batch in val_loader:\\n                input_ids = batch['input_ids'].to(device)\\n                attention_mask = batch['attention_mask'].to(device)\\n                labels = batch['labels'].to(device)\\n                decoder_attention_mask = batch['decoder_attention_mask'].to(device)\\n                \\n                outputs = model(\\n                    input_ids=input_ids,\\n                    attention_mask=attention_mask,\\n                    labels=labels,\\n                    decoder_attention_mask=decoder_attention_mask\\n                )\\n                \\n                total_val_loss += outputs.loss.item()\\n        \\n        avg_train_loss = total_train_loss / len(train_loader)\\n        avg_val_loss = total_val_loss / len(val_loader)\\n        \\n        train_losses.append(avg_train_loss)\\n        val_losses.append(avg_val_loss)\\n        \\n        print(f&quot;\\\\nEpoch {epoch+1}&quot;)\\n        print(f&quot;Average training loss: {avg_train_loss:.4f}&quot;)\\n        print(f&quot;Average validation loss: {avg_val_loss:.4f}&quot;)\\n        \\n        if avg_val_loss &lt; best_val_loss:\\n            best_val_loss = avg_val_loss\\n            torch.save(model.state_dict(), f&quot;{save_dir}/best_model.pth&quot;)\\n            print(&quot;Saved new best model!&quot;)\\n        \\n        # 绘制并保存loss曲线\\n        plt.figure(figsize=(10, 6))\\n        plt.plot(range(1, epoch + 2), train_losses, label='Training Loss')\\n        plt.plot(range(1, epoch + 2), val_losses, label='Validation Loss')\\n        plt.xlabel('Epoch')\\n        plt.ylabel('Loss')\\n        plt.title('Training and Validation Loss')\\n        plt.legend()\\n        plt.grid(True)\\n        plt.savefig('generative-output/loss_curve.png')\\n        plt.close()\\n        \\n        # 强制进行垃圾回收\\n        gc.collect()\\n        if torch.cuda.is_available():\\n            torch.cuda.empty_cache()\\n\\n\\ndef generate_review(model, tokenizer, rating, max_length=150):\\n    model.eval()\\n    prompt = f&quot;Generate a {rating}-star review:&quot;\\n    \\n    inputs = tokenizer(\\n        prompt,\\n        return_tensors=&quot;pt&quot;,\\n        max_length=32,\\n        padding=True,\\n        truncation=True\\n    ).to(device)\\n    \\n    with torch.no_grad():\\n        outputs = model.model.generate(\\n            input_ids=inputs[&quot;input_ids&quot;],\\n            attention_mask=inputs[&quot;attention_mask&quot;],\\n            max_length=max_length,\\n            num_beams=5,\\n            no_repeat_ngram_size=2,\\n            top_k=50,\\n            top_p=0.95,\\n            temperature=0.7,\\n            do_sample=True\\n        )\\n    \\n    generated_text = tokenizer.decode(outputs[0], skip_special_tokens=True)\\n    return generated_text\\n\\n\\ndef main():\\n    # 清理GPU内存\\n    if torch.cuda.is_available():\\n        torch.cuda.empty_cache()\\n        \\n    train_loader, val_loader, tokenizer = prepare_data()\\n    model = ReviewGenerator().to(device)\\n    train_generator(model, train_loader, val_loader)\\n    \\n    # 生成示例评论\\n    model.load_state_dict(torch.load(&quot;generator_checkpoints/best_model.pth&quot;))\\n    \\n    for rating in [1, 3, 5]:\\n        print(f&quot;\\\\nGenerated {rating}-star review:&quot;)\\n        review = generate_review(model, tokenizer, rating)\\n        print(review)\\n\\nif __name__ == &quot;__main__&quot;:\\n    main()\\n</code></pre>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"亚马逊评论数据做文本情感分类模型\",\"date\":\"2024-12-08T00:00:00.000Z\",\"summary\":\"在尝试的学习NLP技术\",\"coverImage\":\"12-8-2.jpg\",\"pinned\":true},\n    \n      html: \"<h1>亚马逊评论数据分析</h1>\\n<h2>跨境电商背景</h2>\\n<p>目前跨境电商蓬勃发展，为了抓住这一风口，深入了解外国电商平台至关重要。亚马逊作为全球最大、流量最高的国际电商平台，是跨境电商入门研究的首选。</p>\\n<p>本文首先对亚马逊商品数据和评论数据进行简要分析，然后基于评论数据构建深度学习模型进行情感分类，以预测评论的情感倾向（正面、中性、负面）。</p>\\n<h2>数据获取</h2>\\n<p>使用 Tampermonkey 脚本进行网页数据采集，优势在于快速简便，几分钟即可完成脚本编写，并利用 JS 操作 DOM。然而，多页面采集较为繁琐，因为网页访问是手动进行的。</p>\\n<p><strong>脚本逻辑:</strong></p>\\n<ol>\\n<li>加载亚马逊网站时，在导航栏等区域添加一个按钮，点击即可爬取当前页面商品信息。</li>\\n<li>点击按钮后，刷新页面模拟真人操作，滚动至底部等待刷新完成。</li>\\n<li>使用 JS CSS 选择器定位商品框，遍历提取标题、价格等信息。</li>\\n</ol>\\n<p><strong>(附带数据获取的图片)</strong></p>\\n<p><strong>问题:</strong>  网站使用哈希法或不写类名，需要调整定位策略，从单用类名/ID 定位到结合层级定位。</p>\\n<h2>数据处理</h2>\\n<p>使用 Python 脚本处理数据：</p>\\n<ol>\\n<li>合并 JSON 文件，清理数据。</li>\\n<li>将价格、评分转换为浮点数，评论数量转换为整数。</li>\\n<li>删除重复项。</li>\\n</ol>\\n<h2>数据可视化</h2>\\n<p>使用 Python 脚本对处理后的数据进行可视化：</p>\\n<p><strong>(附带词云图，价格分布曲线图，价格与评分关系图，评分分布图)</strong></p>\\n<h2>在 PySpark 上运行 Python 脚本</h2>\\n<p>在已配置 Spark 和 PySpark 的环境下：</p>\\n<ol>\\n<li>创建并激活 Python 虚拟环境。</li>\\n<li>使用 pip 安装依赖库。</li>\\n<li>运行脚本并保存可视化图片。</li>\\n</ol>\\n<h2>进阶分析：开源数据</h2>\\n<h3>问题背景分析</h3>\\n<p>在前述商品数据分析基础上，本文利用开源大型数据集构建深度学习模型，进行文本情感分析。通过不断调整模型和参数，验证集准确率从 0.6 提升至 0.9 以上。</p>\\n<h3>数据分析步骤</h3>\\n<ol>\\n<li>\\n<p><strong>数据选择:</strong> Hugging Face 平台上的 Amazon_reviews-2023 数据集。选择开源数据集的优势在于：</p>\\n<ul>\\n<li>数据量庞大，无需担心数据缺失。</li>\\n<li>数据经过预处理，可直接进行分析。</li>\\n<li>数据开源维护，具有较高的鲁棒性和泛化性。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>数据描述:</strong> (数据集大小，格式示例)</p>\\n</li>\\n<li>\\n<p><strong>具体分析步骤:</strong></p>\\n<ul>\\n<li>数据分析和可视化：词云分析、用户画像分析、时间序列分析。</li>\\n<li>机器学习模型：构建神经网络模型进行文本情感分析。</li>\\n</ul>\\n</li>\\n</ol>\\n<h3>数据简要分析和可视化</h3>\\n<p><strong>(附带词云图，评分分布图，验证购买分析图，用户相似度热力图，时间序列分析图)</strong></p>\\n<h3>文本情感分析模型</h3>\\n<h4>模型初步构建</h4>\\n<p><strong>模型 1-1 (回归):</strong></p>\\n<ul>\\n<li>结构: BERT 分词 + Embedding + LSTM + 全连接层(tanh)</li>\\n<li>问题: 拟合效果异常，验证集损失很高。</li>\\n</ul>\\n<p><strong>模型 1-2 (分类):</strong></p>\\n<ul>\\n<li>结构: Embedding + LSTM + 全连接层 + Softmax</li>\\n<li>损失函数: 交叉熵</li>\\n<li>问题: 验证集准确度低，模型过于简单。</li>\\n</ul>\\n<p><strong>模型 1-3 (双层 LSTM):</strong></p>\\n<ul>\\n<li>结构: 双层 LSTM</li>\\n<li>问题: 准确率仍低，主要预测五星评论，收敛过快。</li>\\n</ul>\\n<p><strong>模型 1-4 (双向 LSTM + 注意力):</strong></p>\\n<ul>\\n<li>结构: 双向 LSTM + 注意力机制 + 多层全连接 + Dropout</li>\\n<li>优化器: AdamW + 权重衰减 + 梯度裁剪</li>\\n<li>其他: 分层学习率，模型保存，RMSE 评估</li>\\n<li>结果: 性能显著提升，能预测其他星级评论。</li>\\n<li>问题: 1-4 星评论预测效果仍需改进。</li>\\n</ul>\\n<p><strong>(附带模型结构图、公式、训练曲线图、混淆矩阵)</strong></p>\\n<h4>在 BERT 预训练模型上做微调 (Fine-tune)</h4>\\n<p><strong>模型 1-5 (BERT 微调):</strong></p>\\n<ul>\\n<li>结构: BERT + 分类头 (全连接 + ReLU + Dropout) + Softmax</li>\\n<li>优化: 差异化学习率，权重衰减</li>\\n<li>结果: 性能进一步提升。</li>\\n</ul>\\n<p><strong>模型 1-6 (数据增强 &amp; 训练策略优化):</strong></p>\\n<ul>\\n<li>模型: Dropout 调整为 0.5, 添加 BatchNorm, 冻结 BERT 底层</li>\\n<li>训练: 分层采样, warmup 学习率</li>\\n<li>数据: 动态文本裁剪, 增大批量大小</li>\\n<li>结果: 缓解过拟合，性能略有提升。</li>\\n</ul>\\n<p><strong>模型 1-7 (数据平衡):</strong></p>\\n<ul>\\n<li>数据: 3-4 星过采样和文本增强，加权采样</li>\\n<li>损失函数: 加权交叉熵</li>\\n<li>结果: 3-4 星评论预测提升，但 5 星误判率增加。</li>\\n</ul>\\n<p><strong>模型 1-8 (模型结构优化):</strong></p>\\n<ul>\\n<li>模型: 多头注意力 + 特征增强层 (LayerNorm + Dropout)</li>\\n<li>训练: warmup 学习率，分层学习率，早停</li>\\n<li>结果: 准确率大幅提升，但出现过拟合。</li>\\n</ul>\\n<p><strong>模型 1-9 (更复杂的分类头 &amp; 训练策略优化):</strong></p>\\n<ul>\\n<li>模型: 更复杂的分类头</li>\\n<li>训练: 余弦退火学习率 + warmup，更高初始学习率，断点续训，注意力可视化</li>\\n<li>结果: 准确率达到 0.92，仍有少量过拟合。</li>\\n</ul>\\n<p><strong>(附带模型结构图，训练曲线图，混淆矩阵，注意力可视化结果)</strong></p>\\n<h4>其他可实现模型</h4>\\n<ul>\\n<li>\\n<p><strong>MAMBA 模型:</strong> 优势明显，但目前仅支持 Linux 系统。</p>\\n</li>\\n<li>\\n<p><strong>其他预训练模型:</strong> RoBERTa, XLNet, ELECTRA, FinBERT, DeBERTa, ERNIE 等。</p>\\n</li>\\n<li>\\n<p><strong>多语言文本情感分析模型:</strong>  使用 XLM-RoBERTa-base 构建，中英文测试结果良好，但在中性评论预测方面置信度较低。</p>\\n</li>\\n<li>\\n<p><strong>生成式预训练模型:</strong> 使用 T5 模型进行初步实验，未来可使用更大数据集和更合适的模型 (如 GPT 系列) 提升性能。</p>\\n</li>\\n</ul>\\n<h3>模型解释及不足</h3>\\n<ul>\\n<li>模型假设文本情绪与评分绑定，可能存在不符合此假设的数据，导致假中性和假正向性。</li>\\n<li>数据量相对较小，限制了模型的泛化能力。</li>\\n<li>未划分测试集，仅使用验证集评估模型性能。</li>\\n<li>未使用 AllBeauty 全部数据集，因为数据量增加后性能反而下降，表明需要更复杂的模型和更多数据。</li>\\n</ul>\\n<h3>其他补充</h3>\\n<ul>\\n<li>配置说明: 初期使用 TensorFlow，后期使用 PyTorch + CUDA。</li>\\n<li>训练补充:  记录了模型调试过程中遇到的问题和解决方法.</li>\\n</ul>\\n<h3>源码附录和参考文献</h3>\\n<ul>\\n<li>在线链接\\n<a href=\\\"/posts/etc/dl.rar\\\">所有源码压缩包</a></li>\\n<li>博客: https://suxing.online/#/</li>\\n<li>参考文献:  列出了 LSTM、双向 RNN、注意力机制、Transformer、BERT、T5、Mamba 等模型的相关论文。</li>\\n</ul>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"记录一下写过的爬虫脚本\",\"date\":\"2024-11-16T00:00:00.000Z\",\"summary\":\"写的都是js脚本\",\"coverImage\":\"post2-1.png\",\"pinned\":false},\n    \n      html: \"<p><s>不会有人还在写python脚本吧？</s>  <br>\\n无论是什么语言写的脚本，都必须要操作DOM  <br>\\n既然都操作都操作DOM了，我何不用JS来写呢？ \\\\</p>\\n<p>下文记录一下自己写过的爬虫脚本，数据整理代码写在另一篇了。</p>\\n<h1>pipiads的爬虫脚本</h1>\\n<p>pipiads上面主要有tiktok小店的数据，和一些广告的数据。</p>\\n<h2>主要是爬取商品数据的信息</h2>\\n<pre><code class=\\\"language-javascript\\\">\\n// ==UserScript==\\n// @name         皮皮一键爬取\\n// @namespace    http://tampermonkey.net/\\n// @version      2024-09-14\\n// @description  try to take over the world!\\n// @author       suxing\\n// @match        https://www.pipiads.com/*\\n// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=pipiads.com\\n// @grant        none\\n// ==/UserScript==\\n\\n\\nfunction main(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;pipiads-button1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },4000)\\n    }).then(()=&gt;{\\n        let pageMain = document.querySelector(&quot;.main-container&quot;);\\n        console.log(pageMain)\\n        if(pageMain){\\n            const task1Button = document.createElement(&quot;button&quot;);\\n            task1Button.className = &quot;button-test&quot;;\\n            task1Button.innerHTML = &quot;任务1 小店爬取&quot;;\\n            styleButton(task1Button);\\n            task1Button.onclick=()=&gt;{task1();}\\n\\n            const task2Button = document.createElement(&quot;button&quot;);\\n            task2Button.className = &quot;button-test&quot;;\\n            task2Button.innerHTML = &quot;任务2 产品爬取&quot;;\\n            styleButton(task2Button);\\n            task2Button.onclick=()=&gt;{task2();}\\n            \\n\\n            var buttonContainer = document.createElement(&quot;div&quot;);\\n            buttonContainer.style.display = &quot;flex&quot;;\\n            buttonContainer.style.justifyContent = &quot;center&quot;;\\n            buttonContainer.style.alignItems = &quot;center&quot;;\\n            buttonContainer.style.height = &quot;100px&quot;;\\n            buttonContainer.appendChild(task1Button);\\n            buttonContainer.appendChild(task2Button);\\n            pageMain.parentNode.insertBefore(buttonContainer, pageMain);\\n\\n\\n        }\\n    })\\n}\\n\\nfunction exportjson(data,taskname){\\n    const blob = new Blob([data], { type: 'application/json' });\\n    const url = URL.createObjectURL(blob);\\n    const a = document.createElement('a');\\n    a.href = url;\\n    const today = new Date();\\n    const year = today.getFullYear();\\n    const month = String(today.getMonth() + 1).padStart(2, '0');\\n    const day = String(today.getDate()).padStart(2, '0');\\n    const formattedDate = `${year}-${month}-${day}`;\\n    a.download = `${taskname}-${formattedDate}.json`;\\n    document.body.appendChild(a);\\n    a.click();\\n    document.body.removeChild(a);\\n    URL.revokeObjectURL(url);\\n}\\nfunction task2(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;pipiads-scraper test1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },700)\\n    }).then(()=&gt;{\\n        new Promise((resolve)=&gt;{\\n            window.scrollTo({\\n                top: 7000,\\n                behavior: &quot;smooth&quot;\\n            });\\n            setTimeout(()=&gt;{\\n                resolve();\\n            },1000)\\n        }).then(()=&gt;{\\n            new Promise((resolve)=&gt;{\\n                window.scrollTo({\\n                    top: 14000,\\n                    behavior: &quot;smooth&quot;\\n                });\\n                setTimeout(()=&gt;{\\n                    resolve();\\n                },1000)\\n            }).then(()=&gt;{\\n                new Promise((resolve)=&gt;{\\n                    window.scrollTo({\\n                        top: 21000,\\n                        behavior: &quot;smooth&quot;\\n                    });\\n                    setTimeout(()=&gt;{\\n                        resolve();\\n                    },1000)\\n                }).then(()=&gt;{\\n                    new Promise((resolve)=&gt;{\\n                        window.scrollTo({\\n                            top: document.body.scrollHeight,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                        setTimeout(()=&gt;{\\n                            resolve();\\n                        },700)\\n                    }).then(()=&gt;{\\n                        let productlist=[];\\n                        document.querySelectorAll(&quot;ul.wt-block-grid&gt;li.wt-block-grid__item&quot;).forEach(li=&gt;{\\n                            let title=li.querySelector(&quot;a.title.a-link&quot;).innerText;\\n                            let url=li.querySelector(&quot;a.title.a-link&quot;).getAttribute(&quot;href&quot;);\\n                            let price=&quot;&quot;\\n                            try{\\n                                price=li.querySelector(&quot;.price-box&quot;).innerText.replace(/[()]/g, &quot;&quot;);\\n                            }catch{\\n                                price=&quot;&quot;;\\n                            }\\n                            let datablock=li.querySelector(&quot;.data-count&quot;);\\n                            var i=0;\\n                            let temp=[];\\n                            datablock.querySelectorAll(&quot;.item&quot;).forEach(item=&gt;{\\n                                if(i==0){let thumb=item.querySelector(&quot;.value&quot;).innerText;temp.push(thumb)}\\n                                if(i==1){let ads=item.querySelector(&quot;.value&quot;).innerText;temp.push(ads)}\\n                                if(i==2){let increase=item.querySelector(&quot;.value&quot;).innerText;temp.push(increase)}\\n                                i++;\\n                            })\\n                            let products={\\n                                &quot;title&quot;:title,\\n                                &quot;url&quot;:url,\\n                                &quot;price&quot;:price,\\n                                &quot;thumb&quot;:temp[0],\\n                                &quot;ads&quot;:temp[1],\\n                                &quot;increase&quot;:temp[2],\\n                            }\\n                            productlist.push(products);\\n\\n                        })\\n                        const productListJson = JSON.stringify(productlist, null, 2);\\n                        console.log(productListJson);\\n                        exportjson(productListJson,&quot;task2&quot;);\\n                        window.scrollTo({\\n                            top: 0,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                    })\\n                })\\n            })\\n        })\\n    })\\n}\\n\\nfunction task1(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;pipiads-scraper test1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },700)\\n    }).then(()=&gt;{\\n        new Promise((resolve)=&gt;{\\n            window.scrollTo({\\n                top: 7000,\\n                behavior: &quot;smooth&quot;\\n            });\\n            setTimeout(()=&gt;{\\n                resolve();\\n            },1000)\\n        }).then(()=&gt;{\\n            new Promise((resolve)=&gt;{\\n                window.scrollTo({\\n                    top: 14000,\\n                    behavior: &quot;smooth&quot;\\n                });\\n                setTimeout(()=&gt;{\\n                    resolve();\\n                },1000)\\n            }).then(()=&gt;{\\n                new Promise((resolve)=&gt;{\\n                    window.scrollTo({\\n                        top: 21000,\\n                        behavior: &quot;smooth&quot;\\n                    });\\n                    setTimeout(()=&gt;{\\n                        resolve();\\n                    },1000)\\n                }).then(()=&gt;{\\n                    new Promise((resolve)=&gt;{\\n                        window.scrollTo({\\n                            top: document.body.scrollHeight,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                        setTimeout(()=&gt;{\\n                            resolve();\\n                        },700)\\n                    }).then(()=&gt;{\\n                        let productlist=[];\\n                        document.querySelectorAll(&quot;ul.wt-block-grid&gt;li.wt-block-grid__item&quot;).forEach(li=&gt;{\\n                            let title=li.querySelector(&quot;a.title.a-link&quot;).innerText;\\n                            let url=li.querySelector(&quot;a.title.a-link&quot;).getAttribute(&quot;href&quot;);\\n                            let price=&quot;&quot;\\n                            try{\\n                                price=li.querySelector(&quot;span.usdPrice&quot;).innerText.replace(/[()]/g, &quot;&quot;);\\n                            }catch{\\n                                price=li.querySelector(&quot;strong.price&quot;).innerText;\\n                            }\\n                            let quantity=li.querySelector(&quot;.sales-value&quot;).innerText;\\n                            let datablock=li.querySelector(&quot;.data-count&quot;);\\n                            let adsblock=li.querySelector(&quot;.time-data-box&quot;);\\n                            var i=0;\\n                            let temp=[];\\n                            datablock.querySelectorAll(&quot;.item&quot;).forEach(item=&gt;{\\n                                if(i==0){let ads=item.querySelector(&quot;.value&quot;).innerText;temp.push(ads)}\\n                                if(i==1){let thumb=item.querySelector(&quot;.value&quot;).innerText;temp.push(thumb)}\\n                                if(i==2){let thumbrate=item.querySelector(&quot;.value&quot;).innerText;temp.push(thumbrate)}\\n                                i++;\\n                            })\\n                            let temp1=[]\\n                            var i1=0\\n                            adsblock.querySelectorAll(&quot;.time-item&quot;).forEach(item=&gt;{\\n                                if(i1==0){let starttime=item.querySelector(&quot;._value&quot;).innerText;temp1.push(starttime)}\\n                                if(i1==1){let endtime=item.querySelector(&quot;._value&quot;).innerText;temp1.push(endtime)}\\n                                if(i1==2){let nums=item.querySelector(&quot;._value&quot;).innerText;temp1.push(nums)}\\n                                i1++;\\n\\n                            })\\n                            let products={\\n                                &quot;title&quot;:title,\\n                                &quot;url&quot;:url,\\n                                &quot;price&quot;:price,\\n                                &quot;quantity&quot;:quantity,\\n                                &quot;ads&quot;:temp[0],\\n                                &quot;thumb&quot;:temp[1],\\n                                &quot;thumbrate&quot;:temp[2],\\n                                &quot;starttime&quot;:temp1[0],\\n                                &quot;endtime&quot;:temp1[1],\\n                                &quot;adsnums&quot;:temp1[2]\\n                            }\\n                            productlist.push(products);\\n\\n                        })\\n                        const productListJson = JSON.stringify(productlist, null, 2);\\n                        console.log(productListJson);\\n                        exportjson(productListJson,&quot;task1&quot;);\\n                        window.scrollTo({\\n                            top: 0,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                    })\\n                })\\n            })\\n        })\\n    })\\n}\\nfunction styleButton(button) {\\n    button.style.padding = &quot;7px 15px&quot;;\\n    button.style.margin = &quot;5px&quot;;\\n    button.style.fontSize = &quot;16px&quot;;\\n    button.style.backgroundColor = &quot;#4CAF50&quot;;\\n    button.style.color = &quot;white&quot;;\\n    button.style.border = &quot;none&quot;;\\n    button.style.borderRadius = &quot;5px&quot;;\\n    button.style.cursor = &quot;pointer&quot;;\\n    button.style.boxShadow = &quot;0px 4px 6px rgba(0, 0, 0, 0.1)&quot;;\\n    button.style.transition = &quot;background-color 0.3s&quot;;\\n    button.onmouseover = function() {\\n        button.style.backgroundColor = &quot;#45a049&quot;;\\n    };\\n    button.onmouseout = function() {\\n        button.style.backgroundColor = &quot;#4CAF50&quot;;\\n    };\\n}\\n\\n\\n\\n\\nwindow.addEventListener(&quot;load&quot;,()=&gt;{\\n    main();\\n},false)\\n</code></pre>\\n<h1>sellercenter爬虫</h1>\\n<p>当时随便找到的网站，上面不少数据是可以免费查看的，很爽。\\n随手就搞了一个爬虫，虽然没怎么用。</p>\\n<pre><code class=\\\"language-javascript\\\">// ==UserScript==\\n// @name         ebayscraper1\\n// @namespace    http://tampermonkey.net/\\n// @version      2024-10-14\\n// @description  try to take over the world!\\n// @author       suxing\\n// @match        https://sellercenter.io/*\\n// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=ebay.com\\n// @grant        none\\n// ==/UserScript==\\n\\n\\nfunction main(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;sc-test!&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },2000)\\n    }).then(()=&gt;{\\n        let pageMain = document.querySelector(&quot;.el-table__header-wrapper&quot;);\\n        console.log(pageMain)\\n        if(pageMain){\\n            let button = document.createElement(&quot;button&quot;);\\n            button.className=&quot;button-test&quot;\\n            button.innerHTML = &quot;点击爬取json&quot;;\\n            button.style.padding = &quot;10px 20px&quot;;\\n            button.style.fontSize = &quot;16px&quot;;\\n            button.style.backgroundColor = &quot;#4CAF50&quot;;\\n            button.style.color = &quot;white&quot;;\\n            button.style.border = &quot;none&quot;;\\n            button.style.borderRadius = &quot;5px&quot;;\\n            button.style.cursor = &quot;pointer&quot;;\\n            button.style.boxShadow = &quot;0px 4px 6px rgba(0, 0, 0, 0.1)&quot;;\\n            button.style.transition = &quot;background-color 0.3s&quot;;\\n            button.onmouseover = function() {\\n                button.style.backgroundColor = &quot;#45a049&quot;;\\n            };\\n            button.onmouseout = function() {\\n                button.style.backgroundColor = &quot;#4CAF50&quot;;\\n            };\\n            button.onclick=()=&gt;{scrapefunc();}\\n            var buttonContainer = document.createElement(&quot;div&quot;);\\n            buttonContainer.style.display = &quot;flex&quot;;\\n            buttonContainer.style.justifyContent = &quot;center&quot;;\\n            buttonContainer.style.alignItems = &quot;center&quot;;\\n            buttonContainer.style.height = &quot;100px&quot;; // 调整高度以便更好地居中\\n            buttonContainer.appendChild(button);\\n\\n            // 在 pageMain 元素的上方插入按钮\\n            pageMain.parentNode.insertBefore(buttonContainer, pageMain);\\n        }\\n    })\\n}\\n\\nfunction exportjson(data){\\n    const blob = new Blob([data], { type: 'application/json' });\\n    const url = URL.createObjectURL(blob);\\n    const a = document.createElement('a');\\n    a.href = url;\\n    const today = new Date();\\n    const year = today.getFullYear();\\n    const month = String(today.getMonth() + 1).padStart(2, '0');  \\n    const day = String(today.getDate()).padStart(2, '0');  \\n    const formattedDate = `${year}-${month}-${day}`;\\n    a.download = `ebay${formattedDate}.json`;\\n    document.body.appendChild(a);\\n    a.click();\\n    document.body.removeChild(a);\\n    URL.revokeObjectURL(url);\\n}\\nfunction scrapefunc(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;ebay-scraper test1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },1000)\\n    }).then(()=&gt;{\\n        new Promise((resolve)=&gt;{\\n            window.scrollTo({\\n                top: 2000,\\n                behavior: &quot;smooth&quot;\\n            });\\n            setTimeout(()=&gt;{\\n                resolve();\\n            },1000)\\n        }).then(()=&gt;{\\n            let productlist=[];\\n            document.querySelectorAll(&quot;.el-table__row &quot;).forEach(li=&gt;{\\n                let title=li.querySelector(&quot;.productNameNew&quot;).innerText;\\n                \\n                let price=li.querySelector(&quot;.priceShow&quot;).innerText  \\n                let cate=li.querySelector(&quot;.el-tooltip__trigger&quot;).innerText\\n                let quantity=&quot;&quot;   \\n                try{\\n                    quantity=li.querySelector(&quot;.cell&gt;span&quot;).innerText;\\n                }catch{\\n                    quantity=&quot;不显示&quot;\\n                }                   \\n                let info =&quot;&quot;\\n                try{\\n                    info=li.querySelector(&quot;.viewLabel&quot;).innerText; \\n        \\n                }\\n                catch{\\n                    shipping=&quot;不显示&quot;\\n                }\\n\\n                \\n                let products={\\n                    &quot;title&quot;:title,\\n                    &quot;cate&quot;:cate,\\n                    &quot;price&quot;:price,\\n                    &quot;quantity&quot;:quantity,\\n                    &quot;info&quot;:info,\\n\\n                }                                                                      \\n                productlist.push(products);\\n                })\\n                const productListJson = JSON.stringify(productlist, null, 2);\\n                console.log(productListJson);\\n                exportjson(productListJson);\\n                window.scrollTo({\\n                    top: 0,\\n                    behavior: &quot;smooth&quot;\\n                });\\n            })        \\n\\n        })\\n}\\n\\n\\n\\n\\n\\nwindow.addEventListener(&quot;load&quot;,()=&gt;{ \\n    main();\\n\\n},false)\\n</code></pre>\\n<h1>ebay爬虫</h1>\\n<p>当时做客户需求搞的脚本，爬了二手服务器，内存条，硬盘数据</p>\\n<pre><code class=\\\"language-javascipt\\\">// ==UserScript==\\n// @name         ebayscraper1\\n// @namespace    http://tampermonkey.net/\\n// @version      2024-10-14\\n// @description  try to take over the world!\\n// @author       suxing\\n// @match        https://www.ebay.com/*\\n// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=ebay.com\\n// @grant        none\\n// ==/UserScript==\\n\\n\\nfunction main(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;pipiads-button1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },2000)\\n    }).then(()=&gt;{\\n        let pageMain = document.querySelector(&quot;.s-answer-region&quot;);\\n        console.log(pageMain)\\n        if(pageMain){\\n            let button = document.createElement(&quot;button&quot;);\\n            button.className=&quot;button-test&quot;\\n            button.innerHTML = &quot;点击爬取json&quot;;\\n            button.style.padding = &quot;10px 20px&quot;;\\n            button.style.fontSize = &quot;16px&quot;;\\n            button.style.backgroundColor = &quot;#4CAF50&quot;;\\n            button.style.color = &quot;white&quot;;\\n            button.style.border = &quot;none&quot;;\\n            button.style.borderRadius = &quot;5px&quot;;\\n            button.style.cursor = &quot;pointer&quot;;\\n            button.style.boxShadow = &quot;0px 4px 6px rgba(0, 0, 0, 0.1)&quot;;\\n            button.style.transition = &quot;background-color 0.3s&quot;;\\n            button.onmouseover = function() {\\n                button.style.backgroundColor = &quot;#45a049&quot;;\\n            };\\n            button.onmouseout = function() {\\n                button.style.backgroundColor = &quot;#4CAF50&quot;;\\n            };\\n            button.onclick=()=&gt;{scrapefunc();}\\n            var buttonContainer = document.createElement(&quot;div&quot;);\\n            buttonContainer.style.display = &quot;flex&quot;;\\n            buttonContainer.style.justifyContent = &quot;center&quot;;\\n            buttonContainer.style.alignItems = &quot;center&quot;;\\n            buttonContainer.style.height = &quot;100px&quot;; // 调整高度以便更好地居中\\n            buttonContainer.appendChild(button);\\n\\n            // 在 pageMain 元素的上方插入按钮\\n            pageMain.parentNode.insertBefore(buttonContainer, pageMain);\\n        }\\n    })\\n}\\n\\nfunction exportjson(data){\\n    const blob = new Blob([data], { type: 'application/json' });\\n    const url = URL.createObjectURL(blob);\\n    const a = document.createElement('a');\\n    a.href = url;\\n    const today = new Date();\\n    const year = today.getFullYear();\\n    const month = String(today.getMonth() + 1).padStart(2, '0');  \\n    const day = String(today.getDate()).padStart(2, '0');  \\n    const formattedDate = `${year}-${month}-${day}`;\\n    a.download = `ebay${formattedDate}.json`;\\n    document.body.appendChild(a);\\n    a.click();\\n    document.body.removeChild(a);\\n    URL.revokeObjectURL(url);\\n}\\nfunction scrapefunc(){\\n    new Promise((resolve)=&gt;{\\n        console.log(&quot;ebay-scraper test1&quot;);\\n        setTimeout(()=&gt;{\\n            resolve();\\n        },1000)\\n    }).then(()=&gt;{\\n        new Promise((resolve)=&gt;{\\n            window.scrollTo({\\n                top: 2000,\\n                behavior: &quot;smooth&quot;\\n            });\\n            setTimeout(()=&gt;{\\n                resolve();\\n            },1000)\\n        }).then(()=&gt;{\\n            new Promise((resolve)=&gt;{\\n                window.scrollTo({\\n                    top: 5000,\\n                    behavior: &quot;smooth&quot;\\n                });\\n                setTimeout(()=&gt;{\\n                    resolve();\\n                },1000)\\n            }).then(()=&gt;{\\n                new Promise((resolve)=&gt;{\\n                    window.scrollTo({\\n                        top: 8000,\\n                        behavior: &quot;smooth&quot;\\n                    });\\n                    setTimeout(()=&gt;{\\n                        resolve();\\n                    },1000)\\n                }).then(()=&gt;{\\n                    new Promise((resolve)=&gt;{\\n                        window.scrollTo({\\n                            top: 12000,\\n                            behavior: &quot;smooth&quot;\\n                        });\\n                        setTimeout(()=&gt;{\\n                            resolve();\\n                        },700)\\n                    }).then(()=&gt;{    \\n                        new Promise((resolve)=&gt;{\\n                            window.scrollTo({\\n                                top: 14000,\\n                                behavior: &quot;smooth&quot;\\n                            });\\n                            setTimeout(()=&gt;{\\n                                resolve();\\n                            },700)\\n    \\n                        }).then(()=&gt;{\\n                            let productlist=[];\\n                            document.querySelectorAll(&quot;.s-item__info &quot;).forEach(li=&gt;{\\n                                let title=li.querySelector(&quot;.s-item__title&gt;span&quot;).innerText;\\n                                let secondtitle=&quot;&quot;\\n                                try{\\n                                    secondtitle=li.querySelector(&quot;.s-item__subtitle&gt;span&quot;).innerText;\\n\\n                                }\\n                                catch{\\n                                    secondtitle=&quot;不显示&quot;\\n\\n                                }\\n                                \\n                                let price=li.querySelector(&quot;span.s-item__price&quot;).innerText    \\n                                let quantity=&quot;&quot;   \\n                                try{\\n                                    quantity=li.querySelector(&quot;span.s-item__quantitySold&quot;).innerText;\\n                                }catch{\\n                                    quantity=&quot;不显示&quot;\\n                                }                   \\n                                let loc=&quot;&quot;\\n                                try{\\n                                    loc=li.querySelector(&quot;span.s-item__location&quot;).innerText;\\n\\n                                }\\n                                catch{\\n                                    loc=&quot;不显示&quot;\\n                                }\\n                                let shipping =&quot;&quot;\\n                                try{\\n                                    shipping=li.querySelector(&quot;span.s-item__shipping&quot;).innerText; \\n                      \\n                                }\\n                                catch{\\n                                    shipping=&quot;不显示&quot;\\n                                }\\n    \\n                                \\n                                let products={\\n                                    &quot;title&quot;:title,\\n                                    &quot;secondtitle&quot;:secondtitle,\\n                                    &quot;location&quot;:loc,\\n                                    &quot;price&quot;:price,\\n                                    &quot;quantity&quot;:quantity,\\n                                    &quot;shipping&quot;:shipping,\\n    \\n                                }\\n                                if (products.title!=&quot;Shop on eBay&quot;){\\n                                    productlist.push(products);\\n\\n                                }\\n                                \\n                \\n                            })\\n                            const productListJson = JSON.stringify(productlist, null, 2);\\n                            console.log(productListJson);\\n                            exportjson(productListJson);\\n                            let nextpage=document.querySelector(&quot;.pagination__next&quot;).href\\n                            window.scrollTo({\\n                                top: 0,\\n                                behavior: &quot;smooth&quot;\\n                            });\\n                            location.href=nextpage\\n                        })                              \\n    \\n                           \\n                        \\n                    })\\n                })        \\n\\n            })\\n               \\n        })\\n    })\\n}\\n\\n\\n\\n\\n\\nwindow.addEventListener(&quot;load&quot;,()=&gt;{ \\n    main();\\n\\n},false)\\n</code></pre>\\n<h1>tiktok爬虫</h1>\\n<p>这个没什么卵用的脚本，做到一半我差不多就弃掉了。</p>\\n<p>主要出发点就是，自己手点太慢了想搞个脚本一键保存tiktok后台数据不多好。</p>\\n<p>结果发现还不如手点。。。所以全自动脚本等于全自己手动脚本。</p>\\n<pre><code class=\\\"language-javascript\\\">// ==UserScript==\\n// @name         tkshop test\\n// @namespace    http://tampermonkey.net/\\n// @version      2024-10-28\\n// @description  字节跳动被我踩在脚下。\\n// @author       suxing\\n// @match        https://seller.tiktokglobalshop.com/*\\n// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=tiktokglobalshop.com\\n// @grant        none\\n// ==/UserScript==\\n\\nfunction simulateClick(selector) {\\n    const element = document.querySelector(selector);\\n    \\n    if (element) {\\n        const rect = element.getBoundingClientRect();\\n        const centerX = rect.left + rect.width / 2;\\n        const centerY = rect.top + rect.height / 2;\\n\\n        // 创建鼠标移动事件\\n        const mouseMoveEvent = new MouseEvent('mousemove', {\\n            bubbles: true,\\n            cancelable: true,\\n            view: window,\\n            clientX: centerX,\\n            clientY: centerY\\n        });\\n\\n        // 创建点击事件\\n        const mouseDownEvent = new MouseEvent('mousedown', {\\n            bubbles: true,\\n            cancelable: true,\\n            view: window,\\n            clientX: centerX,\\n            clientY: centerY\\n        });\\n\\n        const mouseUpEvent = new MouseEvent('mouseup', {\\n            bubbles: true,\\n            cancelable: true,\\n            view: window,\\n            clientX: centerX,\\n            clientY: centerY\\n        });\\n\\n        const clickEvent = new MouseEvent('click', {\\n            bubbles: true,\\n            cancelable: true,\\n            view: window,\\n            clientX: centerX,\\n            clientY: centerY\\n        });\\n\\n        // 模拟鼠标移动\\n        document.dispatchEvent(mouseMoveEvent);\\n        // 模拟鼠标按下和松开\\n        element.dispatchEvent(mouseDownEvent);\\n        element.dispatchEvent(mouseUpEvent);\\n        // 模拟点击\\n        element.dispatchEvent(clickEvent);\\n    } else {\\n        console.error('Element not found for selector:', selector);\\n    }\\n}\\n\\nfunction delay(ms) {\\n    return new Promise(resolve =&gt; setTimeout(resolve, ms));\\n}\\n\\nasync function waitForModalToClose() {\\n    // 等待打开的框消失\\n    while (document.querySelector('div[role=&quot;dialog&quot;]')) {\\n        await delay(500); // 每500毫秒检查一次\\n    }\\n}\\n\\nfunction main() {\\n    new Promise((resolve) =&gt; {\\n        console.log(&quot;tktest&quot;);\\n        setTimeout(() =&gt; {\\n            resolve();\\n        }, 10000); // 等待 10 秒\\n    }).then(() =&gt; {\\n        const pageMain = document.querySelector(&quot;#compass-header&quot;);\\n        console.log(pageMain);\\n        if (pageMain) {\\n            // 创建第一个按钮，用于第一个任务\\n            const task1Button = document.createElement(&quot;button&quot;);\\n            task1Button.className = &quot;button-test&quot;;\\n            task1Button.innerHTML = &quot;任务 1 总览数据导出）&quot;;\\n            styleButton(task1Button);\\n            task1Button.onclick = async () =&gt; {\\n                task1Button.disabled = true; // 禁用按钮以防重复点击\\n                console.log(&quot;任务 1: 点击按钮&quot;);\\n                // 执行任务 1 的操作\\n                await simulateClick('button[data-tid=&quot;m4b_button&quot;]'); // 假设是导出按钮\\n                task1Button.disabled = false; // 点击完成后启用按钮\\n            };\\n\\n            // 创建第二个按钮，用于第二个任务\\n            const task2Button = document.createElement(&quot;button&quot;);\\n            task2Button.className = &quot;button-test&quot;;\\n            task2Button.innerHTML = &quot;任务 2: 商品数据导出）&quot;;\\n            styleButton(task2Button);\\n            task2Button.onclick = async () =&gt; {\\n                task2Button.disabled = true; // 禁用按钮以防重复点击\\n                console.log(&quot;任务 2: 商品数据导出&quot;);\\n\\n                // 点击配置指标按钮\\n                const configButtonSelector = 'div.mx-12 button';\\n                simulateClick(configButtonSelector);\\n\\n                // 等待框关闭\\n                await waitForModalToClose();\\n\\n                // 点击导出按钮\\n                const exportButtonSelector = 'div.flex.gap-8 button';\\n                simulateClick(exportButtonSelector);\\n\\n                task2Button.disabled = false; // 点击完成后启用按钮\\n            };\\n\\n            // 创建按钮容器并插入按钮\\n            const buttonContainer = document.createElement(&quot;div&quot;);\\n            buttonContainer.style.display = &quot;flex&quot;;\\n            buttonContainer.style.justifyContent = &quot;center&quot;;\\n            buttonContainer.style.alignItems = &quot;center&quot;;\\n            buttonContainer.style.height = &quot;50px&quot;; // 调整高度以便更好地居中\\n            buttonContainer.appendChild(task1Button);\\n            buttonContainer.appendChild(task2Button);\\n\\n            // 在 pageMain 元素的上方插入按钮容器\\n            pageMain.parentNode.insertBefore(buttonContainer, pageMain);\\n        }\\n    });\\n}\\n\\nfunction styleButton(button) {\\n    button.style.padding = &quot;10px 20px&quot;;\\n    button.style.margin = &quot;5px&quot;;\\n    button.style.fontSize = &quot;16px&quot;;\\n    button.style.backgroundColor = &quot;#4CAF50&quot;;\\n    button.style.color = &quot;white&quot;;\\n    button.style.border = &quot;none&quot;;\\n    button.style.borderRadius = &quot;5px&quot;;\\n    button.style.cursor = &quot;pointer&quot;;\\n    button.style.boxShadow = &quot;0px 4px 6px rgba(0, 0, 0, 0.1)&quot;;\\n    button.style.transition = &quot;background-color 0.3s&quot;;\\n    button.onmouseover = function() {\\n        button.style.backgroundColor = &quot;#45a049&quot;;\\n    };\\n    button.onmouseout = function() {\\n        button.style.backgroundColor = &quot;#4CAF50&quot;;\\n    };\\n}\\n\\n// 调用 main 函数以执行代码\\nmain();\\n\\n</code></pre>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"（考研待开坑）前端网页小项目\",\"date\":\"2024-12-08T00:00:00.000Z\",\"summary\":\"在尝试的学习NLP技术\",\"coverImage\":\"12-8-2.jpg\"},\n    \n      html: \"<h1>还是学一下前端了</h1>\\n<p>在尝试vue3前端项目（这个网站就是vue做的）</p>\\n<p>并且也在尝试react技术栈</p>\\n<p>（待开坑）</p>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"如何成为一个初级的炼丹术士\",\"date\":\"2024-12-09T00:00:00.000Z\",\"summary\":\"深度学习调参就是炼丹~\",\"coverImage\":\"12-8-2.jpg\",\"pinned\":true},\n    \n      html: \"<h1>调参手段笔记</h1>\\n<h2>1. 数据维度：</h2>\\n<ul>\\n<li><strong>数据增强</strong>: 通过对训练数据进行随机变换（旋转、裁剪、翻转、颜色抖动等）来增加数据量，提高模型的泛化能力。</li>\\n<li>数据清洗: 去除数据中的噪声、异常值和重复值，提高数据质量。</li>\\n<li>特征工程: 选择或创建更有效的特征，例如，使用词嵌入表示文本数据。</li>\\n<li>数据平衡: 如果数据集存在类别不平衡问题，可以使用过采样、欠采样或类别权重等技术来平衡类别分布。</li>\\n</ul>\\n<h2>2. 调度策略：</h2>\\n<ul>\\n<li>学习率调度: 学习率是影响模型训练最重要的超参数之一。常用的学习率调度策略包括：\\n<ul>\\n<li>固定学习率: 在整个训练过程中使用相同的学习率。</li>\\n<li>学习率衰减: 随着训练的进行，逐渐减小学习率。常用的衰减方法包括：\\n<ul>\\n<li>阶梯衰减 (Step Decay): 每经过一定的 epoch 数，将学习率降低一个固定的比例。</li>\\n<li>线性衰减 (Linear Decay): 线性地减小学习率。</li>\\n<li>余弦衰减 (Cosine Annealing): 按照余弦函数的曲线降低学习率。</li>\\n</ul>\\n</li>\\n<li><strong>warmup + 余弦衰减</strong>: 在训练初期使用较小的学习率 (warmup)，然后按照余弦函数进行衰减。</li>\\n<li>循环学习率 (Cyclic Learning Rates): 在一定的范围内循环调整学习率。</li>\\n<li>自适应学习率调整: 根据模型的训练状态自动调整学习率，例如 Adam, RAdam 等优化器。</li>\\n</ul>\\n</li>\\n<li><strong>早停 (Early Stopping)</strong>: 当模型在验证集上的性能停止提升时，停止训练，避免过拟合。</li>\\n</ul>\\n<h2>3. 模型结构：</h2>\\n<ul>\\n<li>采用预训练模型</li>\\n<li>网络深度: 增加网络深度可以提高模型的表达能力，但同时也增加了过拟合的风险。</li>\\n<li>网络宽度: 增加网络宽度也可以提高模型的表达能力，但会增加计算量和参数数量。</li>\\n<li>层类型: 选择合适的层类型对于模型的性能至关重要。 例如，卷积层适用于图像数据，循环层适用于序列数据。</li>\\n<li><strong>激活函数</strong>: 选择合适的激活函数可以提高模型的训练效率和性能。 常用的激活函数包括 ReLU, LeakyReLU, GELU, Sigmoid, Tanh 等。\\n$$ReLU(x) = \\\\max(0, x)$$\\n$$LeakyReLU(x) = \\\\begin{cases} x, &amp; \\\\text{if } x &gt; 0 \\\\ \\\\alpha x, &amp; \\\\text{otherwise} \\\\end{cases}$$\\n$$GELU(x) = x \\\\cdot \\\\Phi(x)$$\\n$$GELU(x) \\\\approx 0.5x\\\\left( 1 + \\\\tanh\\\\left( \\\\sqrt{\\\\frac{2}{\\\\pi}}\\\\left( x + 0.044715x^3 \\\\right) \\\\right) \\\\right)$$\\n$$\\\\text{Sigmoid}(x) = \\\\frac{1}{1 + e^{-x}}$$\\n$$\\\\tanh(x) = \\\\frac{e^x - e^{-x}}{e^x + e^{-x}} = \\\\frac{\\\\sinh(x)}{\\\\cosh(x)}$$</li>\\n<li><strong>最后一层激活函数</strong>\\n<ul>\\n<li>分类任务\\n<ul>\\n<li>二元分类: 使用 Sigmoid 激活函数。\\n$$\\\\sigma(x) = \\\\frac{1}{1 + e^{-x}}$$</li>\\n<li>多类别分类: 使用 Softmax 激活函数。\\n$$\\\\text{Softmax}(x_i) = \\\\frac{e^{x_i}}{\\\\sum_{j=1}^{n} e^{x_j}}$$</li>\\n</ul>\\n</li>\\n<li>回归任务\\n<ul>\\n<li>无约束的回归: 使用线性激活函数。\\n$$f(x) = x$$</li>\\n<li>非负的回归: 使用 ReLU 或 Exponential 激活函数。\\n$$ReLU(x) = \\\\max(0, x)$$</li>\\n<li>有界回归: 使用 Sigmoid 或 Tanh 激活函数。\\n$$f(x) = e^x$$</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><strong>残差连接 (Residual Connections)</strong>: 残差连接可以帮助训练更深的网络，避免梯度消失问题。</li>\\n<li><strong>注意力机制 (Attention Mechanism)</strong>: 注意力机制可以帮助模型关注输入中的重要部分，提高模型的性能。</li>\\n</ul>\\n<h2>4. 正则化技术：</h2>\\n<ul>\\n<li><strong>Dropout</strong>: 在训练过程中随机丢弃一些神经元，降低过拟合的风险。</li>\\n<li>权重衰减 (Weight Decay/L2 正则化): 对模型的权重施加 L2 正则化，限制权重的大小，避免过拟合。</li>\\n<li>批量归一化 (Batch Normalization): 对每层的输入进行归一化，加速模型训练，并提高模型的泛化能力。</li>\\n<li>层归一化 (Layer Normalization): 类似于批量归一化，但对每个样本进行归一化，而不是对每个批量进行归一化。</li>\\n</ul>\\n<h2>5. 计算优化算法：</h2>\\n<ul>\\n<li>SGD: 随机梯度下降，简单但容易陷入局部最优。</li>\\n<li>SGD with Momentum: 带动量的 SGD，可以加速收敛，并逃离局部最优。</li>\\n<li>Adagrad: 自适应学习率优化器，根据参数的历史梯度调整学习率。</li>\\n<li>RMSprop: 改进的 Adagrad，可以解决 Adagrad 学习率下降过快的问题。</li>\\n<li><strong>Adam</strong>: 结合了 Momentum 和 RMSprop 的优点，通常是深度学习的首选优化器。</li>\\n<li>RAdam: 改进的 Adam，可以解决 Adam 在训练初期不稳定的问题。</li>\\n</ul>\\n<h2>6. 损失函数：</h2>\\n<p>损失函数的选择取决于具体的机器学习任务。以下是一些常见的损失函数及其公式：</p>\\n<p><strong>1. 分类任务：</strong></p>\\n<ul>\\n<li>\\n<p><strong>二元交叉熵损失 (Binary Cross-Entropy Loss):</strong> 用于二元分类问题。</p>\\n<p>$$\\nL = -\\\\frac{1}{N} \\\\sum_{i=1}^{N} [y_i \\\\log(\\\\hat{y}_i) + (1-y_i) \\\\log(1-\\\\hat{y}_i)]\\n$$\\n其中，$N$ 是样本数量，$y_i$ 是真实标签 (0 或 1)，$\\\\hat{y}_i$ 是预测概率。</p>\\n</li>\\n<li>\\n<p><strong>类别交叉熵损失 (Categorical Cross-Entropy Loss):</strong> 用于多类别分类问题（互斥类别）。</p>\\n<p>$$\\nL = -\\\\frac{1}{N} \\\\sum_{i=1}^{N} \\\\sum_{c=1}^{C} y_{ic} \\\\log(\\\\hat{y}<em>{ic})\\n$$\\n其中，$N$ 是样本数量，$C$ 是类别数量，$y</em>{ic}$ 是真实标签 (one-hot 编码)，$\\\\hat{y}_{ic}$ 是类别 $c$ 的预测概率。</p>\\n</li>\\n<li>\\n<p><strong>多标签二元交叉熵损失:</strong> 用于多标签分类问题(非互斥类别).  它对每个类别独立地应用二元交叉熵损失.</p>\\n</li>\\n</ul>\\n<p><strong>2. 回归任务：</strong></p>\\n<ul>\\n<li>\\n<p><strong>均方误差 (Mean Squared Error, MSE):</strong></p>\\n<p>$$\\nL = \\\\frac{1}{N} \\\\sum_{i=1}^{N} (y_i - \\\\hat{y}_i)^2\\n$$</p>\\n</li>\\n<li>\\n<p><strong>平均绝对误差 (Mean Absolute Error, MAE):</strong></p>\\n<p>$$\\nL = \\\\frac{1}{N} \\\\sum_{i=1}^{N} |y_i - \\\\hat{y}_i|\\n$$</p>\\n</li>\\n<li>\\n<p><strong>Huber 损失 (Huber Loss):</strong>  结合了 MSE 和 MAE 的优点，对异常值更鲁棒。</p>\\n<p>$$\\nL_\\\\delta(y, \\\\hat{y}) = \\\\frac{1}{N} \\\\sum_{i=1}^{N}\\n\\\\begin{cases}\\n\\\\frac{1}{2}(y_i - \\\\hat{y}_i)^2, &amp; \\\\text{if } |y_i - \\\\hat{y}_i| \\\\le \\\\delta \\\\\\n\\\\delta(|y_i - \\\\hat{y}_i| - \\\\frac{1}{2}\\\\delta), &amp; \\\\text{otherwise}\\n\\\\end{cases}\\n$$\\n其中，$\\\\delta$ 是一个控制参数。</p>\\n</li>\\n</ul>\\n<p><strong>其他损失函数：</strong></p>\\n<ul>\\n<li>\\n<p><strong>铰链损失 (Hinge Loss):</strong>  用于支持向量机 (SVM)。</p>\\n<p>$$\\nL = \\\\frac{1}{N}\\\\sum_{i=1}^N \\\\max(0, 1 - y_i \\\\cdot \\\\hat{y}_i)\\n$$\\n其中,  $y_i$ 为真实标签 (-1 或 1)，$\\\\hat{y}_i$ 是预测值.</p>\\n</li>\\n<li>\\n<p><strong>KL 散度 (Kullback-Leibler Divergence):</strong>  用于衡量两个概率分布之间的差异，通常用于生成模型和概率建模.</p>\\n<p>$$\\nD_{KL}(P || Q) = \\\\sum_{x} P(x) \\\\log \\\\frac{P(x)}{Q(x)}\\n$$</p>\\n</li>\\n</ul>\\n<p><strong>选择损失函数的技巧:</strong></p>\\n<ul>\\n<li><strong>根据任务类型选择：</strong>  分类任务通常使用交叉熵损失，回归任务通常使用 MSE、MAE 或 Huber 损失.</li>\\n<li><strong>考虑数据特点：</strong>  如果数据中存在异常值，可以使用 Huber 损失或 MAE 等对异常值更鲁棒的损失函数.</li>\\n<li><strong>根据模型输出选择:</strong>  模型的输出类型也影响损失函数的选择.  例如，如果模型输出概率分布，可以使用交叉熵损失。</li>\\n<li><strong>实验和比较：</strong>  可以尝试不同的损失函数，并比较它们的性能。</li>\\n</ul>\\n<p>没有万能的损失函数，最佳选择取决于你的具体任务和数据。</p>\\n<h2>7. 优化显存占用</h2>\\n<ul>\\n<li>减少批次大小 (Batch Size)</li>\\n<li>梯度累积 (Gradient Accumulation)</li>\\n<li>混合精度训练 (Mixed Precision Training)</li>\\n<li>梯度检查点 (Gradient Checkpointing)</li>\\n<li>分布式训练 (Distributed Training)</li>\\n<li>模型并行 (Model Parallelism)</li>\\n<li>释放不必要的显存</li>\\n</ul>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"深度学习入门笔记\",\"date\":\"2024-12-09T00:00:00.000Z\",\"summary\":\"深度学习和机器学习差别越来越大了\",\"coverImage\":\"12-9-1.jpg\",\"pinned\":true},\n    \n      html: \"<h1>I. 机器学习模型</h1>\\n<h2><strong>1. 线性回归 (Linear Regression):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  预测连续目标变量，假设目标变量与特征之间存在线性关系。</li>\\n<li><strong>公式:</strong>  $y = \\\\mathbf{w}^T\\\\mathbf{x} + b$\\n<ul>\\n<li>$y$:  预测值 (标量)</li>\\n<li>$\\\\mathbf{w}$:  权重向量</li>\\n<li>$\\\\mathbf{x}$:  特征向量</li>\\n<li>$b$:  偏置项 (标量)</li>\\n</ul>\\n</li>\\n<li><strong>损失函数:</strong> 均方误差 (MSE) $MSE = \\\\frac{1}{n} \\\\sum_{i=1}^{n} (y_i - \\\\hat{y}_i)^2$</li>\\n<li><strong>可学习超参数:</strong>  无 (所有参数通过训练直接学习)</li>\\n</ul>\\n<h2><strong>2. 逻辑回归 (Logistic Regression):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  预测二元分类问题，使用 sigmoid 函数将线性回归的输出转换为概率。</li>\\n<li><strong>公式:</strong>  $p = \\\\frac{1}{1 + \\\\exp(-(\\\\mathbf{w}^T\\\\mathbf{x} + b))}$\\n<ul>\\n<li>$p$:  属于正类的概率</li>\\n</ul>\\n</li>\\n<li><strong>损失函数:</strong> 二元交叉熵损失 (BCE) $BCE = -\\\\frac{1}{n}\\\\sum_{i=1}^{n}[y_i \\\\log(p_i) + (1 - y_i) \\\\log(1 - p_i)]$</li>\\n<li><strong>可学习超参数:</strong> 正则化强度 (L1 或 L2)</li>\\n</ul>\\n<h2><strong>3. 支持向量机 (Support Vector Machine - SVM):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  寻找一个最优超平面来划分不同类别的数据。</li>\\n<li><strong>公式 (线性可分):</strong>  最大化间隔 $\\\\frac{2}{|\\\\mathbf{w}|}$，并满足 $y_i(\\\\mathbf{w}^T\\\\mathbf{x}_i + b) \\\\ge 1$</li>\\n<li><strong>损失函数 (软间隔):</strong>  $Hinge Loss + \\\\lambda|\\\\mathbf{w}|^2$  其中 $Hinge Loss = \\\\sum_{i=1}^{n} \\\\max(0, 1 - y_i(\\\\mathbf{w}^T\\\\mathbf{x}_i + b))$</li>\\n<li><strong>可学习超参数:</strong> 正则化参数 $\\\\lambda$ (C), 核函数类型及参数 (例如：高斯核的 $\\\\gamma$)</li>\\n</ul>\\n<h2><strong>4. 决策树 (Decision Tree):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  基于一系列条件判断进行分类或回归。</li>\\n<li><strong>公式:</strong>  无单一公式</li>\\n<li><strong>可学习超参数:</strong> 树的最大深度,  每个节点的最小样本数, 叶节点的最小样本数,  分裂准则 (基尼系数, 信息增益)</li>\\n</ul>\\n<h2><strong>5. 朴素贝叶斯 (Naive Bayes):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  基于贝叶斯定理进行分类，假设特征之间相互独立.</li>\\n<li><strong>公式:</strong> $P(y|\\\\mathbf{x}) = \\\\frac{P(\\\\mathbf{x}|y) P(y)}{P(\\\\mathbf{x})}$\\n<ul>\\n<li>$P(y|\\\\mathbf{x})$:  后验概率</li>\\n<li>$P(\\\\mathbf{x}|y)$:  似然度</li>\\n<li>$P(y)$:  先验概率</li>\\n<li>$P(\\\\mathbf{x})$:  证据</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong>  拉普拉斯平滑参数 (对于离散特征),  高斯分布的参数 (对于连续特征)</li>\\n</ul>\\n<h2><strong>6. K 近邻 (K-Nearest Neighbors - KNN):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong> 基于距离度量找到训练集中与待预测样本最近的 k 个邻居，然后根据邻居的标签进行预测。</li>\\n<li><strong>公式:</strong> 无单一公式</li>\\n<li><strong>可学习超参数:</strong>  邻居数量 k, 距离度量方法 (欧氏距离、曼哈顿距离等)</li>\\n</ul>\\n<h2><strong>7. 随机森林 (Random Forest):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong> 集成学习方法，通过构建多个决策树并结合它们的预测结果来提高模型的泛化能力和鲁棒性。</li>\\n<li><strong>公式:</strong> 无单一公式，基于多个决策树的投票或平均预测。</li>\\n<li><strong>可学习超参数:</strong>  决策树的数量,  每棵树的最大深度, 每个节点的最小样本数,  特征采样比例, 数据采样比例 (Bagging)</li>\\n</ul>\\n<h2><strong>8. XGBoost (Extreme Gradient Boosting):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong> 一种梯度提升树(GBDT)的实现，具有高效、灵活和可扩展性等优点。</li>\\n<li><strong>公式:</strong> 基于梯度提升和正则化项的优化目标函数。</li>\\n<li><strong>可学习超参数:</strong> 学习率 (eta), 树的数量 (n_estimators), 树的最大深度 (max_depth),  L1正则化参数 (alpha), L2正则化参数 (lambda), 子样本比例 (subsample),  特征子采样比例 (colsample_bytree)</li>\\n</ul>\\n<h1><strong>I-I. 时间序列模型补充</strong></h1>\\n<h2>0.数据平稳性分析</h2>\\n<p>1）.<strong>平稳性的类型:</strong></p>\\n<ul>\\n<li><strong>严格平稳:</strong> 时间序列的所有统计特性都不随时间变化。这是一个非常强的条件，在实际应用中很难满足。</li>\\n<li><strong>弱平稳 (宽平稳):</strong>  时间序列的均值、方差和自协方差(和自相关)不随时间变化。这是时间序列分析中常用的平稳性定义。</li>\\n</ul>\\n<p>2）<strong>判断平稳性的方法:</strong></p>\\n<ul>\\n<li>\\n<p><strong>可视化:</strong> 通过绘制时间序列图、滚动统计量图（例如滚动均值和滚动方差）来观察时间序列的均值和方差是否随时间变化。</p>\\n</li>\\n<li>\\n<p><strong>单位根检验:</strong>  如前所述，ADF 检验和 KPSS 检验是常用的单位根检验方法。它们可以用来检验时间序列是否具有单位根，从而判断序列是否平稳。</p>\\n</li>\\n<li>\\n<p><strong>自相关函数 (ACF) 和偏自相关函数 (PACF):</strong>  平稳时间序列的 ACF 和 PACF 会快速衰减到零，而非平稳时间序列的 ACF 会缓慢衰减。</p>\\n</li>\\n</ul>\\n<p>3）<strong>非平稳数据的处理方法:</strong></p>\\n<p>如果时间序列是非平稳的，需要进行一些变换使其平稳，然后再应用时间序列模型。常用的变换方法包括：</p>\\n<ul>\\n<li>\\n<p><strong>差分:</strong>  对时间序列进行一阶或更高阶差分，可以去除趋势和季节性。一阶差分定义为：\\n$\\\\Delta y_t = y_t - y_{t-1}$</p>\\n</li>\\n<li>\\n<p><strong>对数变换:</strong>  对时间序列取对数可以稳定方差，尤其适用于方差随时间增大的情况。</p>\\n</li>\\n<li>\\n<p><strong>季节性分解:</strong>  将时间序列分解为趋势、季节性和残差项，然后对各个分量分别进行建模。</p>\\n</li>\\n<li>\\n<p><strong>Box-Cox 变换:</strong>  一种更通用的变换方法，可以根据数据的特点选择合适的变换参数。</p>\\n</li>\\n</ul>\\n<h2><strong>1. ARIMA (Autoregressive Integrated Moving Average):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  一种经典的时间序列预测模型，通过对时间序列的自回归 (AR)、差分 (I) 和移动平均 (MA) 部分进行建模来捕捉时间序列中的模式。</li>\\n<li><strong>公式:</strong>  $y_t = c + \\\\phi_1 y_{t-1} + ... + \\\\phi_p y_{t-p} + \\\\theta_1 \\\\epsilon_{t-1} + ... + \\\\theta_q \\\\epsilon_{t-q} + \\\\epsilon_t$ (ARIMA(p,d,q)模型)\\n<ul>\\n<li>$p$: 自回归阶数</li>\\n<li>$d$: 差分阶数</li>\\n<li>$q$: 移动平均阶数</li>\\n<li>$\\\\phi$: 自回归系数</li>\\n<li>$\\\\theta$: 移动平均系数</li>\\n<li>$\\\\epsilon$: 白噪声</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong>  p, d, q</li>\\n</ul>\\n<h3>如何确定pdq参数？</h3>\\n<p><strong>1）. ACF 和 PACF 图:</strong></p>\\n<ul>\\n<li><strong>自相关函数 (ACF):</strong> 描述时间序列与自身滞后值之间的相关性。</li>\\n<li><strong>偏自相关函数 (PACF):</strong> 描述时间序列与自身滞后值之间的直接相关性，排除了中间滞后值的影响。</li>\\n</ul>\\n<p>通过观察 ACF 和 PACF 图，可以初步判断 p 和 q 的值：</p>\\n<ul>\\n<li><strong>AR(p) 模型:</strong> ACF 呈指数衰减或拖尾，PACF 在 p 阶后截尾。</li>\\n<li><strong>MA(q) 模型:</strong> ACF 在 q 阶后截尾，PACF 呈指数衰减或拖尾。</li>\\n<li><strong>ARMA(p,q) 模型:</strong> ACF 和 PACF 都呈拖尾。</li>\\n</ul>\\n<p><strong>2）. 单位根检验:</strong></p>\\n<p>用于确定差分阶数 d。常用的单位根检验方法包括：</p>\\n<ul>\\n<li><strong>ADF 检验 (Augmented Dickey-Fuller Test):</strong>  如果序列存在单位根，则需要进行差分。重复进行 ADF 检验， 直到序列平稳。</li>\\n<li><strong>KPSS 检验 (Kwiatkowski-Phillips-Schmidt-Shin Test):</strong>  与 ADF 检验相反，KPSS 检验的原假设是序列平   稳。</li>\\n</ul>\\n<p><strong>3）. 信息准则:</strong></p>\\n<p>用于比较不同 p、d、q 组合的模型拟合效果。常用的信息准则包括：</p>\\n<ul>\\n<li><strong>AIC (Akaike Information Criterion):</strong>  AIC 值越小，模型越好。</li>\\n<li><strong>BIC (Bayesian Information Criterion):</strong>  BIC 值越小，模型越好，BIC 比 AIC 对模型复杂度惩罚更大。</li>\\n</ul>\\n<p><strong>4）. 自动化工具:</strong></p>\\n<p>一些 Python 库提供了自动确定 ARIMA 参数的功能，例如 <code>pmdarima</code> 库中的 <code>auto_arima</code> 函数。该函数会根据信 息准则自动搜索最佳的 p、d、q 组合。</p>\\n<p><strong>迭代流程示例:</strong></p>\\n<ul>\\n<li><strong>数据预处理:</strong>  处理缺失值，进行数据变换（例如对数变换）以稳定方差。</li>\\n<li><strong>判断 d:</strong>  使用 ADF 或 KPSS 检验确定差分阶数 d。</li>\\n<li><strong>初步判断 p 和 q:</strong>  观察差分后序列的 ACF 和 PACF 图，初步估计 p 和 q 的值。</li>\\n<li><strong>模型选择:</strong>  使用不同的 p、d、q 组合训练 ARIMA 模型，并使用 AIC 或 BIC 比较模型的拟合效果。</li>\\n<li><strong>模型评估:</strong>  使用残差分析、预测性能等指标评估模型的优劣。</li>\\n<li><strong>参数调整:</strong>  根据模型评估结果，调整 p、d、q 的值，重复步骤 4 和 5，直到找到最佳的模型。</li>\\n</ul>\\n<h2><strong>2. 灰色预测模型 (GM):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  一种用于处理少量数据的预测模型，通过对原始数据进行累加生成，建立微分方程模型进行预测。</li>\\n<li><strong>公式:</strong>\\n<ul>\\n<li>累加生成: $x^{(1)}(k) = \\\\sum_{i=1}^{k} x^{(0)}(i)$，其中 $x^{(0)}$ 为原始序列, $x^{(1)}$ 为一次累加生成序列。</li>\\n<li>一阶微分方程: $x^{(0)}(k) + az^{(1)}(k) = b$，其中 $z^{(1)}(k) = 0.5[x^{(1)}(k) + x^{(1)}(k-1)]$ 是背景值,  $a$ 为发展系数, $b$ 为灰色作用量。</li>\\n<li>参数估计: 通过最小二乘法估计 $a$ 和 $b$。</li>\\n<li>时间响应函数:  用于预测未来值。</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong> 无，a和b通过数据学习得到。</li>\\n</ul>\\n<h2><strong>3. Prophet:</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  Facebook 开发的时间序列预测模型，特别适用于具有季节性和趋势性数据的预测。</li>\\n<li><strong>公式:</strong>  基于加性模型，将时间序列分解为趋势、季节性、节假日效应和残差项.</li>\\n<li><strong>可学习超参数:</strong>  趋势模型参数, 季节性模型参数, 节假日效应参数</li>\\n</ul>\\n<h2><strong>4. 其他时间序列模型:</strong></h2>\\n<ul>\\n<li><strong>指数平滑:</strong>  简单且有效的时间序列预测方法，适用于短期预测。</li>\\n<li><strong>状态空间模型:</strong>  一种更通用的时间序列建模框架，可以包含 ARIMA、指数平滑等模型作为特例。</li>\\n</ul>\\n<h2><strong>5. 状态空间模型 (State Space Models):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong> 一种灵活的通用时间序列建模框架，通过状态方程描述时间序列的演变，观测方程描述观测值与状态之间的关系。可以涵盖 ARIMA、指数平滑等模型作为特例。</li>\\n<li><strong>公式:</strong>\\n<ul>\\n<li>状态方程: $\\\\mathbf{x}_{t+1} = F_t\\\\mathbf{x}_t + G_t\\\\mathbf{w}_t$</li>\\n<li>观测方程: $\\\\mathbf{y}_t = H_t\\\\mathbf{x}_t + \\\\mathbf{v}_t$</li>\\n<li>其中 $\\\\mathbf{x}_t$ 为状态向量，$\\\\mathbf{y}_t$ 为观测向量，$F_t$, $G_t$, $H_t$ 为系数矩阵，$\\\\mathbf{w}_t$ 和 $\\\\mathbf{v}_t$ 为噪声向量。</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong>  根据具体模型而定，例如卡尔曼滤波中的噪声协方差矩阵。</li>\\n</ul>\\n<h1><strong>II. 深度学习模型</strong></h1>\\n<h2><strong>1. 多层感知机 (Multilayer Perceptron - MLP):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  包含多个全连接层的神经网络.</li>\\n<li><strong>公式:</strong>  $\\\\mathbf{a}^{(l)} = \\\\sigma(\\\\mathbf{W}^{(l)}\\\\mathbf{a}^{(l-1)} + \\\\mathbf{b}^{(l)})$\\n<ul>\\n<li>$\\\\mathbf{a}^{(l)}$: 第 l 层的激活值</li>\\n<li>$\\\\sigma$: 激活函数 (例如 sigmoid, ReLU)</li>\\n<li>$\\\\mathbf{W}^{(l)}$: 第 l 层的权重矩阵</li>\\n<li>$\\\\mathbf{b}^{(l)}$: 第 l 层的偏置向量</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong> 隐藏层数量, 每层神经元数量, 激活函数, 学习率, batch size, 优化器, 正则化方法及强度 (dropout, L1/L2)</li>\\n</ul>\\n<h2><strong>2. 卷积神经网络 (Convolutional Neural Network - CNN):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  使用卷积层提取特征的深度学习模型，主要用于图像和序列数据.</li>\\n<li><strong>公式 (卷积操作):</strong>  $(f * g)(t) =  \\\\int f(\\\\tau)g(t - \\\\tau)d\\\\tau$  (连续) 或  $(f * g)(i) = \\\\sum_j f(j)g(i-j)$ (离散)\\n<ul>\\n<li>$f$: 输入信号</li>\\n<li>$g$: 卷积核</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong>  卷积核大小, 卷积核数量, 步长, 填充,  池化类型及大小,  学习率, batch size, 优化器, 正则化方法及强度</li>\\n</ul>\\n<h2><strong>3. 循环神经网络 (Recurrent Neural Network - RNN):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  处理序列数据的深度学习模型，能够捕捉时间依赖关系。</li>\\n<li><strong>公式:</strong> $\\\\mathbf{h}_t = \\\\sigma(\\\\mathbf{W}\\\\mathbf{x}<em>t + \\\\mathbf{U}\\\\mathbf{h}</em>{t-1} + \\\\mathbf{b})$\\n<ul>\\n<li>$\\\\mathbf{h}_t$:  t 时刻的隐藏状态</li>\\n<li>$\\\\mathbf{x}_t$: t 时刻的输入</li>\\n<li>$\\\\mathbf{W}$, $\\\\mathbf{U}$, $\\\\mathbf{b}$:  权重矩阵和偏置向量</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong> 隐藏单元数量,  学习率, 优化器,  序列长度</li>\\n</ul>\\n<h2><strong>4. 长短期记忆网络 (Long Short-Term Memory - LSTM):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong> 一种特殊的 RNN，能够更好地处理长期依赖关系。</li>\\n<li><strong>公式:</strong>  较为复杂，包含多个门控单元和细胞状态.</li>\\n<li><strong>可学习超参数:</strong>  LSTM单元数量, 学习率, 优化器, 序列长度</li>\\n</ul>\\n<h2>5. Transformer:</h2>\\n<ul>\\n<li><strong>描述:</strong> 基于注意力机制的深度学习模型，广泛应用于自然语言处理领域.</li>\\n<li><strong>公式 (Scaled Dot-Product Attention):</strong>  $Attention(\\\\mathbf{Q}, \\\\mathbf{K}, \\\\mathbf{V}) = \\\\text{softmax}(\\\\frac{\\\\mathbf{Q}\\\\mathbf{K}^T}{\\\\sqrt{d_k}})\\\\mathbf{V}$\\n<ul>\\n<li>$\\\\mathbf{Q}$: 查询矩阵</li>\\n<li>$\\\\mathbf{K}$:  键矩阵</li>\\n<li>$\\\\mathbf{V}$: 值矩阵</li>\\n<li>$d_k$:  键向量的维度</li>\\n</ul>\\n</li>\\n<li><strong>可学习超参数:</strong>  注意力头数, 隐藏层维度,  前馈网络维度, 学习率, batch size, 优化器, dropout 率.</li>\\n</ul>\\n<h1><strong>II-I. 深度学习重要方法补充</strong></h1>\\n<h2><strong>1. 卷积层:</strong></h2>\\n<ul>\\n<li><strong>普通卷积:</strong>  如前所述，$(f * g)(t) =  \\\\int f(\\\\tau)g(t - \\\\tau)d\\\\tau$ (连续) 或  $(f * g)(i) = \\\\sum_j f(j)g(i-j)$ (离散)</li>\\n<li><strong>转置卷积 (反卷积):</strong> 用于上采样，增大特征图尺寸.</li>\\n<li><strong>空洞卷积 (膨胀卷积):</strong> 通过在卷积核中插入“空洞”来扩大感受野，而不增加参数量.</li>\\n<li><strong>深度可分离卷积:</strong> 将标准卷积分解为深度卷积和逐点卷积，减少参数量和计算量.</li>\\n</ul>\\n<h2><strong>2. 池化层:</strong></h2>\\n<ul>\\n<li><strong>最大池化:</strong> 选择池化区域内的最大值.</li>\\n<li><strong>平均池化:</strong> 计算池化区域内值的平均值.</li>\\n</ul>\\n<h2><strong>3. 门控单元:</strong></h2>\\n<ul>\\n<li><strong>LSTM (长短期记忆网络):</strong>  包含输入门、遗忘门、输出门和细胞状态，用于控制信息的流动和记忆.\\n<ul>\\n<li><strong>输入门:</strong>  决定哪些新信息会被添加到细胞状态.</li>\\n<li><strong>遗忘门:</strong> 决定哪些信息会被从细胞状态中移除.</li>\\n<li><strong>输出门:</strong> 决定哪些信息会被输出.</li>\\n</ul>\\n</li>\\n<li><strong>GRU (门控循环单元):</strong>  简化版的 LSTM，只有更新门和重置门.</li>\\n</ul>\\n<h2><strong>4. 残差连接 (Residual Connection):</strong></h2>\\n<ul>\\n<li><strong>描述:</strong>  将输入添加到后续层的输出中，有助于缓解梯度消失问题，使训练更深层次的网络成为可能.</li>\\n<li><strong>公式:</strong>  $y = F(x) + x$，其中 $F(x)$ 是残差块的输出.</li>\\n</ul>\\n<h2><strong>5. 其他重要方法:</strong></h2>\\n<ul>\\n<li><strong>Batch Normalization:</strong>  对每层的输入进行归一化，加速训练并提高模型稳定性.</li>\\n<li><strong>Dropout:</strong>  在训练过程中随机丢弃一部分神经元，防止过拟合.</li>\\n<li><strong>正则化 (L1/L2):</strong>  向损失函数添加惩罚项，限制权重的大小，防止过拟合.</li>\\n</ul>\\n<h1><strong>II-II. 卷积 VS Transformer补充</strong></h1>\\n<h2><strong>1. 卷积的感受野:</strong></h2>\\n<ul>\\n<li><strong>定义:</strong> 卷积神经网络中，特征图上的一个点对应输入图像上的区域大小。</li>\\n<li><strong>计算:</strong> 感受野的大小与卷积核大小、网络深度、步长等因素有关。  感受野越大，意味着该点能够捕捉到更大范围的上下文信息.  每一层的感受野大小可以通过公式递推计算：\\n$RF_i = RF_{i-1} + (kernel_size - 1) * stride_{i-1} * stride_{i-2} * ... * stride_1$\\n其中 $RF_i$ 是第 i 层的感受野, $kernel_size$ 是卷积核大小, $stride$ 是步长.</li>\\n<li><strong>影响:</strong> 感受野的大小对模型的性能有重要影响。例如，在图像识别任务中，更大的感受野可以帮助模型捕捉到更全局的特征。</li>\\n</ul>\\n<h2><strong>2. Transformer 的感受野:</strong></h2>\\n<ul>\\n<li><strong>全局感受野:</strong>  理论上，由于自注意力机制，Transformer 可以捕捉到全局的上下文信息，即具有全局感受野。</li>\\n<li><strong>实际感受野:</strong>  在实践中，Transformer 的注意力机制会偏向于局部区域，因此实际感受野可能小于全局感受野。  这与注意力权重的分布有关.  研究表明，Transformer 的有效感受野随着网络深度的增加而扩大，但增长速度比卷积网络慢.</li>\\n<li><strong>影响:</strong>  Transformer 的感受野特性使其在自然语言处理任务中表现出色，因为它可以捕捉到长距离的依赖关系。</li>\\n</ul>\\n\",\n     }","\nmodule.exports = { \n      attributes: {\"title\":\"测试文章\",\"date\":\"2024-11-1\",\"summary\":\"这是我的第一篇博客文章\",\"coverImage\":\"2.png\",\"pinned\":false},\n    \n      html: \"<h1>欢迎来到我的博客</h1>\\n<p>这是一篇测试博客，如果它能正常显示成功就代表它运行正常了。</p>\\n<h2>数学公式示例</h2>\\n<p>$\\nE = mc^2\\n$</p>\\n<h2>代码块示例</h2>\\n<pre><code class=\\\"language-python\\\">def hello_world():\\n    print(&quot;Hello, World!&quot;)\\n</code></pre>\\n<h2>图片示例</h2>\\n<p><img src=\\\"posts/images/1.png\\\" alt=\\\"本地图片\\\"></p>\\n\",\n     }","<!-- src/App.vue -->\n<template>\n  <div class=\"app\">\n    <blog-header />\n    <router-view />\n    <blog-footer />\n  </div>\n</template>\n\n<script>\nimport BlogHeader from '@/components/BlogHeader.vue'\nimport BlogFooter from '@/components/BlogFooter.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    BlogHeader,\n    BlogFooter\n  }\n}\n</script>\n","<!-- BlogHeader.vue -->\n<template>\n  <header class=\"header\" :class=\"{ 'header-scrolled': isScrolled }\">\n    <div class=\"header-content\">\n      <div class=\"header-main\">\n        <h1 class=\"site-title\">星云茶聚</h1>\n        <nav class=\"site-nav\">\n          <router-link to=\"/\" class=\"nav-link\">首页</router-link>\n          <router-link to=\"/archive\" class=\"nav-link\">归档</router-link>\n          <router-link to=\"/about\" class=\"nav-link\">关于</router-link>\n        </nav>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script>\n\nexport default {\n  name: 'BlogHeader',\n  data() {\n    return {\n      isScrolled: false,\n      lastScrollTop: 0,\n      headerHeight: 0,\n      scrollThreshold: 50, // 添加滚动阈值\n      scrollTimer: null\n    }\n  },\n  mounted() {\n    this.headerHeight = this.$el.offsetHeight\n    window.addEventListener('scroll', this.handleScroll, { passive: true })\n    document.body.style.paddingTop = `${this.headerHeight + 40}px`\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n    document.body.style.paddingTop = '0'\n    if (this.scrollTimer) {\n      clearTimeout(this.scrollTimer)\n    }\n  },\n  methods: {\n    handleScroll() {\n      // 使用 requestAnimationFrame 优化性能\n      if (this.scrollTimer) {\n        cancelAnimationFrame(this.scrollTimer)\n      }\n      \n      this.scrollTimer = requestAnimationFrame(() => {\n        const st = window.scrollY // 替换废弃的 pageYOffset\n        \n        // 在顶部或接近顶部时始终显示\n        if (st <= this.scrollThreshold) {\n          this.isScrolled = false\n          return\n        }\n\n        // 计算滚动距离和方向\n        const scrollDelta = st - this.lastScrollTop\n        \n        // 只有当滚动距离超过阈值时才触发变化\n        if (Math.abs(scrollDelta) > this.scrollThreshold) {\n          if (scrollDelta > 0) {\n            // 向下滚动\n            this.isScrolled = false\n          } else {\n            // 向上滚动\n            this.isScrolled = true\n          }\n          this.lastScrollTop = st\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.header-scrolled {\n  top: 0;\n}\n\n.header {\n  background: rgba(255, 255, 255, 0.65); /* 降低不透明度 */\n  backdrop-filter: blur(0.5px); /* 添加模糊效果增加可读性 */\n  border-bottom: 1px solid #eef2f7;\n  max-width: 900px;\n  margin: auto;\n  padding: 0.5rem 0;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 1rem;\n}\n\n.header-main {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.05rem;\n}\n\n.site-title {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #2c3e50;\n  margin: 0;\n  background: linear-gradient(120deg, #42b883 0%, #3aa876 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.site-nav {\n  display: flex;\n  gap: 2rem; /* 增加导航项间距 */\n}\n\n.nav-link {\n  color: #4a5568;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 0.9375rem;\n  padding: 0.5rem 0.75rem; /* 增加可点击区域 */\n  position: relative;\n  transition: color 0.2s ease;\n}\n.nav-link:hover {\n  color: #42b883;\n}\n\n.nav-link::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background: #42b883;\n  transform: scaleX(0);\n  transition: transform 0.2s ease;\n}\n\n.nav-link:hover::after,\n.router-link-active::after {\n  transform: scaleX(1);\n}\n\n@media (max-width: 768px) {\n  .header-content {\n    padding: 0 1rem;\n  }\n  \n  .header-main {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .site-nav {\n    gap: 1.5rem;\n  }\n}\n</style>","import { render } from \"./BlogHeader.vue?vue&type=template&id=1e9d4ba0&scoped=true\"\nimport script from \"./BlogHeader.vue?vue&type=script&lang=js\"\nexport * from \"./BlogHeader.vue?vue&type=script&lang=js\"\n\nimport \"./BlogHeader.vue?vue&type=style&index=0&id=1e9d4ba0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1e9d4ba0\"]])\n\nexport default __exports__","<!-- src/components/BlogFooter.vue -->\n<template>\n    <footer class=\"footer\">\n      <p>© {{ currentYear }} 星云茶聚. All rights reserved.</p>\n      <div class=\"social-links\">\n        <a href=\"#\">微博</a> |\n        <a href=\"https://github.com/SUXUING-star/SUXUING-star.github.io\">GitHub</a> |\n        <a href=\"#\">LinkedIn</a>\n      </div>\n    </footer>\n  </template>\n  \n  <script>\n  export default {\n    name: 'BlogFooter',\n    computed: {\n      currentYear() {\n        return new Date().getFullYear()\n      }\n    }\n  }\n  </script>","import { render } from \"./BlogFooter.vue?vue&type=template&id=47c3d96c\"\nimport script from \"./BlogFooter.vue?vue&type=script&lang=js\"\nexport * from \"./BlogFooter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=7dda88b9\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- Home.vue -->\n<template>\n  <div class=\"home-page\">\n    <section class=\"banner\">\n      <div class=\"banner-content\">\n        <h2>欢迎来到这个神奇的地方！</h2>\n        <p>记录成长，探索未知的世界。</p>\n      </div>\n    </section>\n\n\n    <!-- 置顶文章区域 -->\n    <section v-if=\"pinnedPosts.length\" class=\"pinned-posts\">\n      <h3 class=\"section-title\">📌 置顶文章</h3>\n      <div class=\"posts-grid\">\n        <blog-post\n          v-for=\"post in pinnedPosts\"\n          :key=\"post.id\"\n          :post=\"post\"\n          @click=\"viewPost(post.id)\"\n        />\n      </div>\n    </section>\n    \n    <!-- 普通文章区域 -->\n    <section class=\"regular-posts\">\n      <h3 v-if=\"pinnedPosts.length\" class=\"section-title\">最新文章</h3>\n      <div class=\"posts-grid\">\n        <blog-post\n          v-for=\"post in paginatedRegularPosts\"\n          :key=\"post.id\"\n          :post=\"post\"\n          @click=\"viewPost(post.id)\"\n        />\n      </div>\n    </section>\n\n    <!-- 分页控件 -->\n    <div v-if=\"totalPages > 1\" class=\"pagination\">\n      <button \n        class=\"pagination-btn\" \n        :disabled=\"currentPage === 1\"\n        @click=\"changePage(currentPage - 1)\"\n      >\n        ← 上一页\n      </button>\n      \n      <div class=\"pagination-numbers\">\n        <button \n          v-for=\"page in displayedPages\" \n          :key=\"page\"\n          class=\"page-number\"\n          :class=\"{ active: page === currentPage }\"\n          @click=\"changePage(page)\"\n        >\n          {{ page }}\n        </button>\n      </div>\n\n      <button \n        class=\"pagination-btn\"\n        :disabled=\"currentPage === totalPages\"\n        @click=\"changePage(currentPage + 1)\"\n      >\n        下一页 →\n      </button>\n    </div>\n  </div>\n</template>\n  \n<script>\nimport { useStore } from 'vuex'\nimport { computed, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport BlogPost from '@/components/BlogPost.vue'\n\nexport default {\n  name: 'HomePage',\n  components: {\n    BlogPost\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    \n    const postsPerPage = 6\n    const currentPage = ref(1)\n    \n    const posts = computed(() => {\n      console.log('Posts:', store.state.posts)\n      return store.state.posts\n    })\n    \n    // 统一使用 pinned\n    const pinnedPosts = computed(() =>\n      posts.value.filter(post => \n        post.frontmatter?.pinned === true || \n        post.pinned === true\n      )\n    )\n    const regularPosts = computed(() =>\n      posts.value.filter(post => post.pinned !== true)\n    );\n    \n    // 计算总页数（只考虑非置顶文章）\n    const totalPages = computed(() => \n      Math.ceil(regularPosts.value.length / postsPerPage)\n    )\n    \n    // 当前页的普通文章\n    const paginatedRegularPosts = computed(() => {\n      const start = (currentPage.value - 1) * postsPerPage\n      const end = start + postsPerPage\n      return regularPosts.value.slice(start, end)\n    })\n    \n    // 计算要显示的页码（最多显示5个页码）\n    const displayedPages = computed(() => {\n      const total = totalPages.value\n      const current = currentPage.value\n      const pages = []\n      \n      if (total <= 5) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i)\n        }\n      } else {\n        if (current <= 3) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i)\n          }\n        } else if (current >= total - 2) {\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i)\n          }\n        } else {\n          for (let i = current - 2; i <= current + 2; i++) {\n            pages.push(i)\n          }\n        }\n      }\n      \n      return pages\n    })\n    \n    const changePage = (page) => {\n      currentPage.value = page\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      })\n    }\n    \n    const viewPost = (id) => {\n      router.push(`/post/${id}`)\n    }\n    \n    return {\n      pinnedPosts,\n      paginatedRegularPosts,\n      currentPage,\n      totalPages,\n      displayedPages,\n      changePage,\n      viewPost\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-page {\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 1rem;\n}\n\n.section-title {\n  font-size: 1.5rem;\n  color: #2c3e50;\n  margin: 2rem 0 1rem;\n  padding-left: 0.5rem;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.pinned-posts {\n  margin-bottom: 2rem;\n}\n\n.posts-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 1.5rem;\n  padding: 0.5rem 0;\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n  gap: 1rem;\n}\n\n.pagination-numbers {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.pagination-btn, .page-number {\n  padding: 0.5rem 1rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  background-color: #ffffff;\n  color: #4a5568;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-btn:not(:disabled):hover,\n.page-number:hover {\n  background-color: #f7fafc;\n  border-color: #cbd5e0;\n}\n\n.page-number.active {\n  background-color: #42b883;\n  color: white;\n  border-color: #42b883;\n}\n\n@media (max-width: 768px) {\n  .banner {\n    padding: 1.5rem 1rem;\n  }\n\n  .banner h2 {\n    font-size: 1.5rem;\n  }\n\n  .banner p {\n    font-size: 1rem;\n  }\n\n  .posts-grid {\n    grid-template-columns: 1fr;\n    gap: 1.25rem;\n  }\n\n  .pagination {\n    flex-wrap: wrap;\n  }\n\n  .section-title {\n    font-size: 1.25rem;\n    margin: 1.5rem 0 0.75rem;\n  }\n}\n</style>","<!-- BlogPost.vue -->\n<template>\n  <article class=\"blog-post-card\" :class=\"{ 'blog-post-pinned': post.pinned }\" @click=\"$emit('click')\">\n    <!-- 添加置顶标识 -->\n    <div class=\"pin-badge\" v-if=\"post.pinned\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" \n           stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"22\"/>\n        <path d=\"M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z\"/>\n      </svg>\n      <span>置顶</span>\n    </div>\n    \n    <div class=\"post-image\" >\n      <img \n        v-if=\"post.coverImage\"\n        :src=\"post.coverImage\" \n        :alt=\"post.title\"\n        @error=\"handleImageError\"\n        loading=\"lazy\"\n      >\n      <img \n        v-else \n        src=\"/placeholder-image.gif\" \n        alt=\"Placeholder Image\" \n        loading=\"lazy\"\n      >\n    </div>\n    <div class=\"post-content\">\n      <h2 class=\"post-title\">{{ post.title }}</h2>\n      <div class=\"post-meta\">\n        <span class=\"post-date\">{{ post.date }}</span>\n      </div>\n      <p class=\"post-summary\">{{ post.summary }}</p>\n      <div class=\"post-footer\">\n        <span class=\"read-more\">阅读全文 →</span>\n      </div>\n    </div>\n  </article>\n</template>\n\n<script>\nexport default {\n  name: 'BlogPostItem',\n  props: {\n    post: {\n      type: Object,\n      required: true,\n      default: () => ({\n\n        coverImage: '',\n        summary: ''\n      }),\n      validator: function(obj) {\n        return obj && \n          // 标题可以是空字符串，但必须是字符串\n          (typeof obj.title === 'string') && \n          // 日期可以是空字符串，但必须是字符串\n          (typeof obj.date === 'string') && \n          // pinned 是可选的，如果存在必须是布尔值\n          (!('pinned' in obj) || typeof obj.pinned === 'boolean') && \n          // coverImage 可以是字符串或 undefined\n          (typeof obj.coverImage === 'string' || obj.coverImage === undefined) && \n          // summary 可以是空字符串，但必须是字符串\n          (typeof obj.summary === 'string')\n      }\n    }\n  },\n  methods: {\n    handleImageError(e) {\n      e.target.src = '/placeholder-image.gif'\n    }\n    \n    \n  }\n}\n</script>\n\n<style scoped>\n/* 修正 - 为 blog-post-card 添加 position: relative */\n.blog-post-card {\n  background: #ffffff;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  border: 1px solid #eef2f7;\n  position: relative; /* 添加相对定位 */\n}\n\n.blog-post-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 置顶标识样式 */\n.pin-badge {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: rgba(66, 184, 131, 0.9);\n  color: white;\n  padding: 0.25rem 0.75rem;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  z-index: 1;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n\n.pin-badge svg {\n  width: 14px;\n  height: 14px;\n}\n\n.blog-post-card {\n  background: #ffffff;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  border: 1px solid #eef2f7;\n  position: relative;\n}\n\n.blog-post-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.post-image {\n  width: 100%;\n  height: 180px;\n  overflow: hidden;\n}\n\n.post-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.blog-post-card:hover .post-image img {\n  transform: scale(1.05);\n}\n\n.post-content {\n  padding: 1.25rem;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(to bottom, #ffffff 0%, #fafbfc 100%);\n}\n\n.post-title {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #2c3e50;\n  margin: 0 0 0.5rem 0;\n  line-height: 1.4;\n}\n\n.post-meta {\n  font-size: 0.875rem;\n  color: #718096;\n  margin-bottom: 0.75rem;\n}\n\n.post-summary {\n  color: #4a5568;\n  line-height: 1.6;\n  margin-bottom: 1rem;\n  flex: 1;\n  font-size: 0.9375rem;\n}\n\n.post-footer {\n  margin-top: auto;\n  padding-top: 0.75rem;\n  border-top: 1px solid #edf2f7;\n}\n\n.read-more {\n  color: #42b883;\n  font-weight: 500;\n  font-size: 0.875rem;\n}\n\n.read-more:hover {\n  color: #3aa876;\n}\n/* 中分辨率：调整为两列布局 */\n@media (max-width: 1024px) {\n  .blog-post-container {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n/* 小分辨率：调整为一列布局 */\n@media (max-width: 768px) {\n  .blog-post-container {\n    grid-template-columns: 1fr;\n  }\n}\n</style>","import { render } from \"./BlogPost.vue?vue&type=template&id=0abe35df&scoped=true\"\nimport script from \"./BlogPost.vue?vue&type=script&lang=js\"\nexport * from \"./BlogPost.vue?vue&type=script&lang=js\"\n\nimport \"./BlogPost.vue?vue&type=style&index=0&id=0abe35df&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0abe35df\"]])\n\nexport default __exports__","import { render } from \"./Home.vue?vue&type=template&id=6ccd4249&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=6ccd4249&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ccd4249\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport Home from '../views/Home.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n    // 预加载其他常用组件\n    beforeEnter: (to, from, next) => {\n      const components = [\n        import(/* webpackChunkName: \"about\" */ '../views/About.vue'),\n        import(/* webpackChunkName: \"archive\" */ '../views/Archive.vue')\n      ];\n      Promise.all(components).catch(() => {});\n      next();\n    }\n  },\n  {\n    path: '/about',\n    name: 'About',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue'),\n    // 添加 meta 字段用于控制缓存\n    meta: { keepAlive: true }\n  },\n  {\n    path: '/post/:id',\n    name: 'PostDetail',\n    component: () => import(/* webpackChunkName: \"post\" */ '../views/PostDetail.vue'),\n    props: true,\n  },\n  {\n    path: '/archive',\n    name: 'Archive',\n    component: () => import(/* webpackChunkName: \"archive\" */ '../views/Archive.vue'),\n    meta: { keepAlive: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n  // 滚动行为\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return { top: 0 };\n    }\n  }\n});\n\n// 路由守卫中添加进度条\nrouter.beforeEach((to, from, next) => {\n  // 可以在这里添加 NProgress 等加载进度条\n  next();\n});\n\nexport default router;","import { createStore } from 'vuex'\n\n// 使用 webpack 的 require.context 导入 Markdown 文件\nconst markdownFiles = require.context('../posts/', true, /\\.md$/)\n\n// 日期格式化\nfunction formatDate(dateString) {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\n\n// 改进图片路径处理函数\nfunction getImageUrl(imagePath) {\n  if (!imagePath) return ''\n  \n  // 处理外部链接\n  if (imagePath.startsWith('http')) {\n    return imagePath\n  }\n  \n  try {\n    // 使用 require.context 预加载所有图片\n    const imagesContext = require.context('../posts/images/', true, /\\.(png|jpe?g|gif|webp|svg)$/i)\n    \n    // 标准化图片路径\n    const normalizedPath = imagePath.startsWith('/') ? imagePath.slice(1) : imagePath\n    \n    // 查找匹配的图片\n    const imageKey = imagesContext.keys().find(key => {\n      // 移除 './' 前缀并比较路径\n      const contextKey = key.replace(/^\\.\\//, '')\n      return contextKey === normalizedPath\n    })\n    \n    if (imageKey) {\n      return imagesContext(imageKey)\n    }\n    \n    throw new Error(`Image not found: ${imagePath}`)\n  } catch (e) {\n    console.warn(`Image loading error for ${imagePath}:`, e)\n    return '' // 或者返回默认占位图片路径\n  }\n}\n\n\n// 改进 Markdown 内容中的图片路径处理\nfunction processMarkdownImages(content) {\n  return content.replace(\n    /!\\[(.*?)\\]\\((.*?)\\)/g,\n    (match, alt, path) => {\n      // 处理外部链接\n      if (path.startsWith('http')) {\n        return match\n      }\n      \n      try {\n        const imageUrl = getImageUrl(path)\n        return imageUrl ? `![${alt}](${imageUrl})` : match\n      } catch (e) {\n        console.warn(`Failed to process image in markdown: ${path}`)\n        return match\n      }\n    }\n  )\n}\n\n// Markdown 文件处理\nfunction processMarkdownFiles() {\n  return markdownFiles.keys().map((path, index) => {\n    const slug = path.replace(/^\\.\\//, '').replace(/\\.md$/, '')\n    const { attributes, html } = markdownFiles(path)\n\n    return {\n      id: index + 1,\n      slug,\n      title: attributes.title,\n      date: formatDate(attributes.date),\n      summary: attributes.summary,\n      coverImage: getImageUrl(attributes.coverImage),\n      pinned: attributes.pinned || false,\n      content: processMarkdownImages(html)\n    }\n  })\n}\n\nconst store = createStore({\n  state() {\n    return {\n      posts: processMarkdownFiles()\n    }\n  },\n  getters: {\n    getPostById: (state) => (id) => {\n      return state.posts.find(post => post.id === parseInt(id))\n    },\n    getPostBySlug: (state) => (slug) => {\n      return state.posts.find(post => post.slug === slug)\n    },\n    getAllPosts: (state) => {\n      return state.posts\n    }\n  },\n  mutations: {\n    UPDATE_POST(state, { id, post }) {\n      const index = state.posts.findIndex(p => p.id === id)\n      if (index !== -1) {\n        state.posts[index] = { ...state.posts[index], ...post }\n      }\n    }\n  },\n  actions: {\n    updatePost({ commit }, payload) {\n      commit('UPDATE_POST', payload)\n    }\n  }\n})\n\nexport default store\n","// src/main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport './assets/styles/main.css'\n\n// 导入 KaTeX CSS\nimport 'katex/dist/katex.min.css'\n// 导入代码高亮样式\nimport 'highlight.js/styles/github.css'\n\n\n\nconst app = createApp(App)\n\napp.use(store)\napp.use(router)\n\napp.mount('#app')","var map = {\n\t\"./12-8-1.png\": 514,\n\t\"./12-8-2.jpg\": 6830,\n\t\"./12-9-1.jpg\": 9783,\n\t\"./2.png\": 7478,\n\t\"./3.png\": 4415,\n\t\"./post2-1.png\": 1342\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1979;","var map = {\n\t\"./post2.md\": 3937,\n\t\"./post3.md\": 9317,\n\t\"./post4.md\": 2879,\n\t\"./post5.md\": 3352,\n\t\"./post6.md\": 277,\n\t\"./post7.md\": 8774,\n\t\"./post8.md\": 4307,\n\t\"./post9.md\": 2044,\n\t\"./welcome.md\": 8277\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5344;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + ({\"205\":\"post\",\"503\":\"archive\",\"594\":\"about\"}[chunkId] || chunkId) + \".\" + {\"137\":\"5b3b94a8\",\"205\":\"44f8d373\",\"503\":\"29cb7fcf\",\"594\":\"6f7f4a2a\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + \"post\" + \".\" + \"e89b4845\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"xingyunchaju:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/SUXUING-star.github.io/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"205\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxingyunchaju\"] = self[\"webpackChunkxingyunchaju\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [683,501,849,823], function() { return __webpack_require__(1137); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["module","exports","attributes","html","class","_createElementBlock","_hoisted_1","_createVNode","_component_blog_header","_component_router_view","_component_blog_footer","_normalizeClass","$data","isScrolled","_createElementVNode","_hoisted_2","_hoisted_3","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","name","data","lastScrollTop","headerHeight","scrollThreshold","scrollTimer","mounted","this","$el","offsetHeight","window","addEventListener","handleScroll","passive","document","body","style","paddingTop","beforeUnmount","removeEventListener","clearTimeout","methods","cancelAnimationFrame","requestAnimationFrame","st","scrollY","scrollDelta","Math","abs","__exports__","_toDisplayString","$options","currentYear","href","computed","Date","getFullYear","components","BlogHeader","BlogFooter","render","key","$setup","pinnedPosts","length","_Fragment","_renderList","post","_createBlock","_component_blog_post","id","onClick","$event","viewPost","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","paginatedRegularPosts","totalPages","_hoisted_7","disabled","currentPage","changePage","_hoisted_8","_hoisted_9","displayedPages","page","active","_hoisted_10","_hoisted_11","src","alt","loading","$props","pinned","_ctx","$emit","xmlns","width","height","viewBox","fill","stroke","x1","y1","x2","y2","d","coverImage","title","onError","args","handleImageError","date","summary","props","type","Object","required","validator","obj","undefined","e","target","BlogPost","setup","store","useStore","router","useRouter","postsPerPage","ref","posts","console","log","state","value","filter","frontmatter","regularPosts","ceil","start","end","slice","total","current","pages","i","push","scrollTo","top","behavior","routes","path","component","Home","beforeEnter","from","next","Promise","all","catch","meta","keepAlive","createRouter","history","createWebHashHistory","scrollBehavior","savedPosition","beforeEach","markdownFiles","require","formatDate","dateString","toLocaleDateString","year","month","day","getImageUrl","imagePath","startsWith","imagesContext","normalizedPath","imageKey","keys","find","contextKey","replace","Error","warn","processMarkdownImages","content","match","imageUrl","processMarkdownFiles","map","index","slug","createStore","getters","getPostById","parseInt","getPostBySlug","getAllPosts","mutations","UPDATE_POST","findIndex","p","actions","updatePost","commit","payload","app","createApp","App","use","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","onload","doneFns","parentNode","removeChild","forEach","setTimeout","bind","head","appendChild","Symbol","toStringTag","createStylesheet","fullhref","oldTag","reject","linkTag","rel","nonce","onLinkComplete","errorType","realHref","err","request","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","then","installedChunks","installedChunkData","promise","error","loadingEnded","realSrc","message","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}