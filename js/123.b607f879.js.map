{"version":3,"file":"js/123.b607f879.js","mappings":"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","sources":["webpack://vue-blog/./node_modules/prismjs/components/prism-bash.js","webpack://vue-blog/./node_modules/prismjs/components/prism-css.js","webpack://vue-blog/./node_modules/prismjs/components/prism-javascript.js","webpack://vue-blog/./node_modules/prismjs/components/prism-json.js","webpack://vue-blog/./node_modules/prismjs/components/prism-markup.js","webpack://vue-blog/./node_modules/prismjs/components/prism-python.js","webpack://vue-blog/./node_modules/prismjs/components/prism-typescript.js","webpack://vue-blog/./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js","webpack://vue-blog/./node_modules/prismjs/prism.js","webpack://vue-blog/./src/views/PostDetail.vue","webpack://vue-blog/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://vue-blog/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://vue-blog/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://vue-blog/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://vue-blog/./node_modules/marked/lib/marked.esm.js","webpack://vue-blog/./src/views/PostDetail.vue?b0ff"],"sourcesContent":["(function (Prism) {\n\t// $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n\t// + LC_ALL, RANDOM, REPLY, SECONDS.\n\t// + make sure PS1..4 are here as they are not always set,\n\t// - some useless things.\n\tvar envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n\n\tvar commandAfterHeredoc = {\n\t\tpattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n\t\tlookbehind: true,\n\t\talias: 'punctuation', // this looks reasonably well in all themes\n\t\tinside: null // see below\n\t};\n\n\tvar insideString = {\n\t\t'bash': commandAfterHeredoc,\n\t\t'environment': {\n\t\t\tpattern: RegExp('\\\\$' + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': [\n\t\t\t// [0]: Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t],\n\t\t\t\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\t'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\t'punctuation': /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [1]: Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [2]: Brace expansion\n\t\t\t{\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t'environment': {\n\t\t\t\t\t\tpattern: RegExp('(\\\\{)' + envVars),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:\\w+|[#?*!@$])/\n\t\t],\n\t\t// Escape sequences from echo and printf's manuals, and escaped quotes.\n\t\t'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/.*/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function-name': [\n\t\t\t// a) function foo {\n\t\t\t// b) foo() {\n\t\t\t// c) function foo() {\n\t\t\t// but not “foo {”\n\t\t\t{\n\t\t\t\t// a) and c)\n\t\t\t\tpattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// b)\n\t\t\t\tpattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n\t\t\t\talias: 'function'\n\t\t\t}\n\t\t],\n\t\t// Highlight variable names as variables in for and select beginnings.\n\t\t'for-or-select': {\n\t\t\tpattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight variable names as variables in the left-hand part\n\t\t// of assignments (“=” and “+=”).\n\t\t'assign-left': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n\t\t\tinside: {\n\t\t\t\t'environment': {\n\t\t\t\t\tpattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'constant'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight parameter names as variables\n\t\t'parameter': {\n\t\t\tpattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t// Here-document with quotes around the tag\n\t\t\t// → No expansion (so no “inside”).\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'bash': commandAfterHeredoc\n\t\t\t\t}\n\t\t\t},\n\t\t\t// “Normal” string\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n\t\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n\t\t\t\tpattern: /(^|[^$\\\\])'[^']*'/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n\t\t\t\tpattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'entity': insideString.entity\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'environment': {\n\t\t\tpattern: RegExp('\\\\$?' + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': insideString.variable,\n\t\t'function': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t\t'builtin': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true,\n\t\t\t// Alias added to make those easier to distinguish from strings.\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'file-descriptor': {\n\t\t\tpattern: /\\B&\\d\\b/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'operator': {\n\t\t\t// Lots of redirections here, but not just that.\n\t\t\tpattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n\t\t\tinside: {\n\t\t\t\t'file-descriptor': {\n\t\t\t\t\tpattern: /^\\d/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n\t\t'number': {\n\t\t\tpattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tcommandAfterHeredoc.inside = Prism.languages.bash;\n\n\t/* Patterns in command substitution. */\n\tvar toBeCopied = [\n\t\t'comment',\n\t\t'function-name',\n\t\t'for-or-select',\n\t\t'assign-left',\n\t\t'parameter',\n\t\t'string',\n\t\t'environment',\n\t\t'function',\n\t\t'keyword',\n\t\t'builtin',\n\t\t'boolean',\n\t\t'file-descriptor',\n\t\t'operator',\n\t\t'punctuation',\n\t\t'number'\n\t];\n\tvar inside = insideString.variable[1].inside;\n\tfor (var i = 0; i < toBeCopied.length; i++) {\n\t\tinside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n\t}\n\n\tPrism.languages.sh = Prism.languages.bash;\n\tPrism.languages.shell = Prism.languages.bash;\n}(Prism));\n","(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t *\n\t * @type {string}\n\t */\n\tvar PLUGIN_NAME = 'line-numbers';\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t *\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n\n\t/**\n\t * Global exports\n\t */\n\tvar config = Prism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t *\n\t\t * @param {Element} element pre element\n\t\t * @param {number} number line number\n\t\t * @returns {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\t\tif (!lineNumberRows) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart;\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd;\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart;\n\n\t\t\treturn lineNumberRows.children[lineIndex];\n\t\t},\n\n\t\t/**\n\t\t * Resizes the line numbers of the given element.\n\t\t *\n\t\t * This function will not add line numbers. It will only resize existing ones.\n\t\t *\n\t\t * @param {HTMLElement} element A `<pre>` element with line numbers.\n\t\t * @returns {void}\n\t\t */\n\t\tresize: function (element) {\n\t\t\tresizeElements([element]);\n\t\t},\n\n\t\t/**\n\t\t * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n\t\t * the current viewport.\n\t\t *\n\t\t * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n\t\t *\n\t\t * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tassumeViewportIndependence: true\n\t};\n\n\t/**\n\t * Resizes the given elements.\n\t *\n\t * @param {HTMLElement[]} elements\n\t */\n\tfunction resizeElements(elements) {\n\t\telements = elements.filter(function (e) {\n\t\t\tvar codeStyles = getStyles(e);\n\t\t\tvar whiteSpace = codeStyles['white-space'];\n\t\t\treturn whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n\t\t});\n\n\t\tif (elements.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar infos = elements.map(function (element) {\n\t\t\tvar codeElement = element.querySelector('code');\n\t\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\t\tif (!codeElement || !lineNumbersWrapper) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\t\tif (!lineNumberSizer) {\n\t\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t\t}\n\n\t\t\tlineNumberSizer.innerHTML = '0';\n\t\t\tlineNumberSizer.style.display = 'block';\n\n\t\t\tvar oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\treturn {\n\t\t\t\telement: element,\n\t\t\t\tlines: codeLines,\n\t\t\t\tlineHeights: [],\n\t\t\t\toneLinerHeight: oneLinerHeight,\n\t\t\t\tsizer: lineNumberSizer,\n\t\t\t};\n\t\t}).filter(Boolean);\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lines = info.lines;\n\t\t\tvar lineHeights = info.lineHeights;\n\t\t\tvar oneLinerHeight = info.oneLinerHeight;\n\n\t\t\tlineHeights[lines.length - 1] = undefined;\n\t\t\tlines.forEach(function (line, index) {\n\t\t\t\tif (line && line.length > 1) {\n\t\t\t\t\tvar e = lineNumberSizer.appendChild(document.createElement('span'));\n\t\t\t\t\te.style.display = 'block';\n\t\t\t\t\te.textContent = line;\n\t\t\t\t} else {\n\t\t\t\t\tlineHeights[index] = oneLinerHeight;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lineHeights = info.lineHeights;\n\n\t\t\tvar childIndex = 0;\n\t\t\tfor (var i = 0; i < lineHeights.length; i++) {\n\t\t\t\tif (lineHeights[i] === undefined) {\n\t\t\t\t\tlineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar wrapper = info.element.querySelector('.line-numbers-rows');\n\n\t\t\tlineNumberSizer.style.display = 'none';\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\tinfo.lineHeights.forEach(function (height, lineNumber) {\n\t\t\t\twrapper.children[lineNumber].style.height = height + 'px';\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns style declarations for the element\n\t *\n\t * @param {Element} element\n\t */\n\tfunction getStyles(element) {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n\t}\n\n\tvar lastWidth = undefined;\n\twindow.addEventListener('resize', function () {\n\t\tif (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n\t\t\treturn;\n\t\t}\n\t\tlastWidth = window.innerWidth;\n\n\t\tresizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!env.code) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar code = /** @type {Element} */ (env.element);\n\t\tvar pre = /** @type {HTMLElement} */ (code.parentNode);\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector('.line-numbers-rows')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!Prism.util.isActive(code, PLUGIN_NAME)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.classList.remove(PLUGIN_NAME);\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tpre.classList.add(PLUGIN_NAME);\n\n\t\tvar match = env.code.match(NEW_LINE_EXP);\n\t\tvar linesNum = match ? match.length + 1 : 1;\n\t\tvar lineNumbersWrapper;\n\n\t\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\t\tlineNumbersWrapper = document.createElement('span');\n\t\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\t\tlineNumbersWrapper.className = 'line-numbers-rows';\n\t\tlineNumbersWrapper.innerHTML = lines;\n\n\t\tif (pre.hasAttribute('data-start')) {\n\t\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper);\n\n\t\tresizeElements([pre]);\n\n\t\tPrism.hooks.run('line-numbers', env);\n\t});\n\n\tPrism.hooks.add('line-numbers', function (env) {\n\t\tenv.plugins = env.plugins || {};\n\t\tenv.plugins.lineNumbers = true;\n\t});\n\n}());\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","<template>\n    <div class=\"post-detail\" v-if=\"post\">\n      \n      <div class=\"post-container\">\n        <p>（注意：如果代码块显示异常，那你就刷新一下网页）</p>\n        <h1>{{ post.title }}</h1>\n        <div class=\"post-meta\">\n          <span class=\"date\">{{ post.date }}</span>\n        </div>\n        <div class=\"post-content markdown-body\" v-html=\"renderedContent\" ref=\"contentRef\"></div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { computed, onMounted, ref, watch, nextTick } from 'vue'\n  import { useRoute } from 'vue-router'\n  import { useStore } from 'vuex'\n  import { marked } from 'marked'\n  \n  // 正确的 Prism.js 导入顺序\n  import Prism from 'prismjs'\n  import 'prismjs/themes/prism-tomorrow.css'\n  // 在核心加载后再加载语言\n  import 'prismjs/components/prism-markup'\n  import 'prismjs/components/prism-css'\n  import 'prismjs/components/prism-javascript'\n  import 'prismjs/components/prism-typescript'\n  import 'prismjs/components/prism-python'\n  import 'prismjs/components/prism-bash'\n  import 'prismjs/components/prism-json'\n  // 可选的插件\n  import 'prismjs/plugins/line-numbers/prism-line-numbers'\n  import 'prismjs/plugins/line-numbers/prism-line-numbers.css'\n  \n  export default {\n    name: 'PostDetailPage',\n    setup() {\n      const route = useRoute()\n      const store = useStore()\n      const contentRef = ref(null)\n  \n      const loadMathJax = () => {\n        return new Promise((resolve) => {\n          window.MathJax = {\n            tex: {\n              inlineMath: [['$', '$']],\n              displayMath: [['$$', '$$']]\n            },\n            svg: {\n              fontCache: 'global'\n            },\n            startup: {\n              pageReady: () => {\n                resolve()\n              }\n            }\n          }\n  \n          const script = document.createElement('script')\n          script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js'\n          document.head.appendChild(script)\n        })\n      }\n      const getImageUrl = (imagePath) => {\n        if (!imagePath) return ''\n        // 如果路径是以 http 开头的，直接返回\n        if (imagePath.startsWith('http')) {\n          return imagePath\n        }\n        // 否则使用 public 中的路径\n        return `/posts/images/${imagePath}`\n      }\n      const configureMarked = () => {\n        const renderer = new marked.Renderer()\n  \n        // 优化的代码高亮处理\n        renderer.code = (code, language = 'plaintext') => {\n          let highlightedCode = code\n          try {\n            if (Prism.languages[language]) {\n              highlightedCode = Prism.highlight(\n                code,\n                Prism.languages[language],\n                language\n              )\n            }\n  \n            if (language === 'math') {\n              return `<div class=\"math-block\">$$${code}$$</div>`\n            }\n  \n            return `\n              <div class=\"code-block-wrapper\">\n                <pre class=\"line-numbers language-${language}\"><code>${highlightedCode}</code></pre>\n              </div>\n            `\n          } catch (err) {\n            console.error('Code highlighting error:', err)\n            return `<pre><code>${code}</code></pre>`\n          }\n        }\n        // 修改图片渲染逻辑\n        renderer.image = (href, title, text) => {\n          const imageUrl = getImageUrl(href)\n          return `\n            <div class=\"image-container\">\n              <img src=\"${imageUrl}\" alt=\"${text}\" title=\"${title || ''}\" loading=\"lazy\" />\n              ${text ? `<div class=\"image-caption\">${text}</div>` : ''}\n            </div>\n          `\n        }\n  \n        marked.setOptions({\n          renderer,\n          gfm: true,\n          breaks: true,\n          pedantic: false,\n          smartLists: true,\n          smartypants: false\n        })\n      }\n  \n      const renderMathJax = () => {\n        if (window.MathJax) {\n          window.MathJax.typeset()\n        }\n      }\n  \n      const highlightCode = () => {\n        if (contentRef.value) {\n          const codeBlocks = contentRef.value.querySelectorAll('pre code')\n          codeBlocks.forEach((block) => {\n            Prism.highlightElement(block)\n          })\n        }\n      }\n     onMounted(async () => {\n        configureMarked()\n        await loadMathJax()\n        renderMathJax() // 首次加载后渲染一次公式\n      })\n\n      const post = computed(() => \n        store.state.posts.find(p => p.id === parseInt(route.params.id))\n      )\n      const processMarkdownContent = (content) => {\n        if (!content) return ''\n        // 处理 Markdown 内容中的图片路径\n        return content.replace(\n          /!\\[(.*?)\\]\\((.*?)\\)/g,\n          (match, alt, path) => {\n            if (path.startsWith('http')) {\n              return match\n            }\n            const imageUrl = getImageUrl(path)\n            return `![${alt}](${imageUrl})`\n          }\n        )\n      }\n      const renderedContent = computed(() => {\n        if (!post.value?.content) return ''\n        try {\n          // 先处理内容中的图片路径，再进行 Markdown 渲染\n          const processedContent = processMarkdownContent(post.value.content)\n          return marked.parse(processedContent)\n        } catch (err) {\n          console.error('Markdown rendering error:', err)\n          return '<p>Error rendering content</p>'\n        }\n      })\n    \n      watch(renderedContent, () => {\n        nextTick(() => {\n          highlightCode()\n          renderMathJax()\n        })\n      })\n      \n      return {\n        post,\n        renderedContent,\n        contentRef\n      }\n    }\n  }\n  </script>\n  \n <style>\n \n  /* Prism.js 基础样式覆盖 */\n  :root {\n    --prism-background: #2d2d2d;\n    --prism-color: #e0e0e0;\n    --mathjax-bg: #f3f4f6;\n    --post-bg: #f7fbfc;\n    --post-color: #333;\n  }\n  \n  .code-block-wrapper {\n    margin: 1.5rem 0;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  }\n  \n  pre[class*=\"language-\"] {\n    margin: 0;\n    padding: 1rem;\n    background: var(--prism-background) !important;\n    color: var(--prism-color);\n    font-size: 0.9rem;\n    line-height: 1.6;\n    tab-size: 2;\n    border-radius: 8px;\n  }\n  \n  code[class*=\"language-\"] {\n    font-family: 'Fira Code', Consolas, Monaco, monospace;\n    white-space: pre-wrap;\n    color: var(--prism-color);\n  }\n  \n  /* 行号样式 */\n  .line-numbers .line-numbers-rows {\n    border-right: 1px solid #555;\n    padding-right: 0.75rem;\n  }\n\n  /* MathJax 样式 */\n  .math-block {\n    overflow-x: auto;\n    padding: 1.2rem;\n    margin: 1.5rem 0;\n    background: var(--mathjax-bg);\n    border-radius: 8px;\n    color: #333;\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  }\n\n  .MathJax {\n    font-size: 1.05em;\n    color: #2c3e50;\n  }\n  \n  /* 文章容器样式 */\n  .post-container {\n    max-width: 800px;\n    margin: 0 auto;\n    background-color: var(--post-bg);\n    padding: 2rem;\n    border-radius: 10px;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n    border: 1px solid #e0e0e0;\n  }\n  \n  /* 文章内容样式 */\n  .post-content {\n    line-height: 1.8;\n    color: var(--post-color);\n  }\n  \n  .post-content h1,\n  .post-content h2,\n  .post-content h3 {\n    margin-top: 1.8rem;\n    margin-bottom: 1.2rem;\n    font-weight: 600;\n    color: #2c3e50;\n  }\n  \n  .post-content p {\n    margin: 1rem 0;\n  }\n  \n  .post-content blockquote {\n    border-left: 4px solid #42b883;\n    margin: 1.5rem 0;\n    padding: 0.8rem 1.2rem;\n    background-color: #e0f5f1;\n    color: #555;\n    font-style: italic;\n    border-radius: 5px;\n  }\n  \n  /* 行内代码样式 */\n  :not(pre) > code {\n    background: #f5f5f5;\n    padding: 0.2em 0.4em;\n    border-radius: 3px;\n    font-size: 0.9em;\n    color: #d63384;\n  }\n  .post-content img {\n    max-width: 70%;        /* 最大宽度为父容器的一半 */\n    height: auto;          /* 保持纵横比 */\n    display: block;        /* 确保图片是块级元素 */\n    margin-left: auto;     /* 左右居中 */\n    margin-right: auto;    /* 左右居中 */\n    \n    border: 5px solid #ccc;    /* 给图片添加边框 */\n    border-radius: 10px;        /* 圆角效果 */\n    padding: 10px;              /* 图片四周加内边距（留白） */\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);  /* 添加阴影效果 */\n  }\n\n</style>\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { render } from \"./PostDetail.vue?vue&type=template&id=56326f57\"\nimport script from \"./PostDetail.vue?vue&type=script&lang=js\"\nexport * from \"./PostDetail.vue?vue&type=script&lang=js\"\n\nimport \"./PostDetail.vue?vue&type=style&index=0&id=56326f57&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Prism","envVars","commandAfterHeredoc","pattern","lookbehind","alias","inside","insideString","RegExp","greedy","languages","bash","entity","variable","toBeCopied","i","length","sh","shell","string","css","source","rest","markup","tag","addInlined","addAttribute","javascript","extend","clike","insertBefore","regex","js","json","webmanifest","hooks","add","env","type","attributes","content","replace","Object","defineProperty","value","tagName","lang","includedCdataInside","def","attrName","push","html","mathml","svg","xml","ssml","atom","rss","python","py","typescript","keyword","typeInside","ts","document","PLUGIN_NAME","NEW_LINE_EXP","config","plugins","lineNumbers","getLine","element","number","classList","contains","lineNumberRows","querySelector","lineNumberStart","parseInt","getAttribute","lineNumberEnd","children","lineIndex","resize","resizeElements","assumeViewportIndependence","lastWidth","undefined","window","addEventListener","innerWidth","Array","prototype","slice","call","querySelectorAll","code","pre","parentNode","test","nodeName","util","isActive","remove","lineNumbersWrapper","match","linesNum","lines","join","createElement","setAttribute","className","innerHTML","hasAttribute","style","counterReset","appendChild","run","elements","filter","e","codeStyles","getStyles","whiteSpace","infos","map","codeElement","lineNumberSizer","codeLines","textContent","split","display","oneLinerHeight","getBoundingClientRect","height","lineHeights","sizer","Boolean","forEach","info","line","index","childIndex","wrapper","lineNumber","getComputedStyle","currentStyle","_self","WorkerGlobalScope","self","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","encode","tokens","Token","isArray","o","toString","objId","obj","clone","deepClone","visited","id","key","hasOwnProperty","v","getLanguage","m","exec","toLowerCase","parentElement","setLanguage","language","currentScript","Error","err","src","stack","scripts","getElementsByTagName","defaultActivation","no","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","highlightAll","async","highlightAllUnder","container","selector","apply","highlightElement","parent","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","name","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","next","tail","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","node","newNode","count","array","s","classes","aliases","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports","Element","matches","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","extension","autoloader","loadLanguages","loadFile","range","parseRange","start","end","Math","max","min","String","error","fileHighlight","logged","console","warn","arguments","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","Number","comma","class","$setup","post","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","title","_hoisted_3","_hoisted_4","date","renderedContent","ref","_hoisted_5","_createCommentVNode","_typeof","Symbol","iterator","constructor","toPrimitive","t","r","TypeError","toPropertyKey","_defineProperty","enumerable","configurable","writable","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","unescapeTest","unescape","n","charAt","fromCharCode","substring","caret","edit","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","splitCells","tableRow","row","offset","escaped","curr","cells","trim","shift","pop","splice","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","repeatString","result","outputLink","cap","link","raw","lexer","state","inLink","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","Tokenizer","options","space","rules","block","newline","codeBlockStyle","fences","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","items","itemRegex","repeat","trimLeft","search","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","hasMultipleLineBreaks","some","table","item","header","align","rows","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lexInline","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","startatt","listitem","checkbox","tablerow","tablecell","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parseInline","l2","l3","cell","itemBody","renderers","unshift","Hooks","preprocess","markdown","postprocess","onError","msg","Promise","resolve","reject","parseMarkdown","origOpt","marked","throwError","done","pending","then","catch","Set","setOptions","use","args","childTokens","pack","opts","ext","prevRenderer","prop","prevTokenizer","prevHook","passThroughHooks","has","arg","values","concat","setup","route","useRoute","store","useStore","contentRef","loadMathJax","MathJax","tex","inlineMath","displayMath","fontCache","startup","pageReady","getImageUrl","imagePath","startsWith","configureMarked","imageUrl","smartLists","renderMathJax","typeset","highlightCode","codeBlocks","onMounted","computed","posts","find","params","processMarkdownContent","alt","path","processedContent","watch","nextTick","__exports__","render"],"sourceRoot":""}